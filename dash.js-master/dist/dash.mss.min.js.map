{"version":3,"sources":["webpack://dashjs/webpack/universalModuleDefinition","webpack://dashjs/webpack/bootstrap","webpack://dashjs/./src/streaming/vo/FragmentRequest.js","webpack://dashjs/./src/core/events/EventsBase.js","webpack://dashjs/(webpack)/buildin/global.js","webpack://dashjs/./src/core/errors/ErrorsBase.js","webpack://dashjs/./src/streaming/MediaPlayerEvents.js","webpack://dashjs/./src/streaming/vo/metrics/HTTPRequest.js","webpack://dashjs/./externals/BigInteger.js","webpack://dashjs/./src/streaming/vo/DataChunk.js","webpack://dashjs/./src/streaming/vo/DashJSError.js","webpack://dashjs/./src/mss/MssFragmentInfoController.js","webpack://dashjs/./src/mss/errors/MssErrors.js","webpack://dashjs/./src/mss/MssFragmentMoofProcessor.js","webpack://dashjs/./src/mss/MssFragmentMoovProcessor.js","webpack://dashjs/./src/mss/MssFragmentProcessor.js","webpack://dashjs/./src/mss/parser/MssParser.js","webpack://dashjs/./src/mss/MssHandler.js","webpack://dashjs/./src/mss/index.js","webpack://dashjs/(webpack)/buildin/module.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","FragmentRequest","url","this","action","ACTION_DOWNLOAD","startTime","NaN","mediaStartTime","mediaType","mediaInfo","type","duration","timescale","range","serviceLocation","requestStartDate","firstByteDate","requestEndDate","quality","index","availabilityStartTime","availabilityEndTime","wallStartTime","bytesLoaded","bytesTotal","delayLoadingTime","responseType","representationId","HTTPRequest","INIT_SEGMENT_TYPE","info","init","MEDIA_SEGMENT_TYPE","start","end","ACTION_COMPLETE","EventsBase","events","config","override","publicOnly","evt","indexOf","g","Function","e","ErrorsBase","errors","err","mediaPlayerEvents","AST_IN_FUTURE","BUFFER_EMPTY","BUFFER_LOADED","BUFFER_LEVEL_STATE_CHANGED","BUFFER_LEVEL_UPDATED","DYNAMIC_TO_STATIC","ERROR","FRAGMENT_LOADING_COMPLETED","FRAGMENT_LOADING_PROGRESS","FRAGMENT_LOADING_STARTED","FRAGMENT_LOADING_ABANDONED","LOG","MANIFEST_LOADED","METRICS_CHANGED","METRIC_CHANGED","METRIC_ADDED","METRIC_UPDATED","PERIOD_SWITCH_STARTED","PERIOD_SWITCH_COMPLETED","QUALITY_CHANGE_REQUESTED","QUALITY_CHANGE_RENDERED","TRACK_CHANGE_RENDERED","STREAM_INITIALIZING","STREAM_UPDATED","STREAM_ACTIVATED","STREAM_DEACTIVATED","STREAM_INITIALIZED","STREAM_TEARDOWN_COMPLETE","TEXT_TRACKS_ADDED","TEXT_TRACK_ADDED","TTML_PARSED","TTML_TO_PARSE","CAPTION_RENDERED","CAPTION_CONTAINER_RESIZE","CAN_PLAY","CAN_PLAY_THROUGH","PLAYBACK_ENDED","PLAYBACK_ERROR","PLAYBACK_NOT_ALLOWED","PLAYBACK_METADATA_LOADED","PLAYBACK_LOADED_DATA","PLAYBACK_PAUSED","PLAYBACK_PLAYING","PLAYBACK_PROGRESS","PLAYBACK_RATE_CHANGED","PLAYBACK_SEEKED","PLAYBACK_SEEKING","PLAYBACK_SEEK_ASKED","PLAYBACK_STALLED","PLAYBACK_STARTED","PLAYBACK_TIME_UPDATED","PLAYBACK_WAITING","MANIFEST_VALIDITY_CHANGED","EVENT_MODE_ON_START","EVENT_MODE_ON_RECEIVE","CONFORMANCE_VIOLATION","REPRESENTATION_SWITCH","tcpid","actualurl","trequest","tresponse","responsecode","interval","trace","_stream","_tfinish","_mediaduration","_quality","_responseHeaders","_serviceLocation","HTTPRequestTrace","b","GET","HEAD","MPD_TYPE","XLINK_EXPANSION_TYPE","INDEX_SEGMENT_TYPE","BITSTREAM_SWITCHING_SEGMENT_TYPE","MSS_FRAGMENT_INFO_SEGMENT_TYPE","LICENSE","OTHER_TYPE","bigInt","undefined","BASE","MAX_INT","MAX_INT_ARR","smallToArray","supportsNativeBigInt","BigInt","Integer","v","radix","alphabet","caseSensitive","parseBase","parseValue","BigInteger","sign","isSmall","SmallInteger","NativeBigInt","isPrecise","Math","floor","arrayToSmall","arr","trim","length","compareAbs","createArray","x","Array","truncate","ceil","add","a","sum","l_a","l_b","carry","base","push","addAny","addSmall","subtract","difference","a_l","b_l","borrow","subtractSmall","multiplyLong","product","a_i","j","multiplySmall","shiftLeft","concat","multiplySmallAndArray","square","divModSmall","lambda","q","remainder","divisor","quotient","divModAny","self","Error","negate","abs","comparison","quotientDigit","shift","result","divisorMostSignificantDigit","divMod1","guess","xlen","highx","highy","check","part","unshift","reverse","divMod2","qSign","mod","mSign","isBasicPrime","isUnit","equals","isEven","isDivisibleBy","lesser","millerRabinTest","nPrev","prev","divide","next","modPow","plus","subtractAny","minus","small","multiply","l1","l2","multiplyKaratsuba","y","max","slice","ac","bd","abcd","times","_multiplyBySmall","divmod","over","pow","toString","_0","_1","_2","isNegative","exp","isZero","isPositive","isOdd","compare","Infinity","compareTo","eq","notEquals","neq","greater","gt","lt","greaterOrEquals","geq","lesserOrEquals","leq","isPrime","strict","bits","bitLength","logN","log","toJSNumber","isProbablePrime","iterations","randBetween","modInv","lastT","lastR","zero","newT","one","newR","powersOfTwo","powers2Length","highestPower2","shift_isSmall","bitwise","fn","xSign","ySign","xRem","not","yRem","xDigit","yDigit","xDivMod","yDivMod","String","shiftRight","remQuo","and","or","xor","roughLOB","min","gcd","integerLogarithm","tmp","text","toLowerCase","absBase","alphabetValues","digits","parseBaseFromArray","val","toBase","apply","map","valueOf","neg","Number","out","left","digit","toBaseString","stringify","join","parseStringValue","split","decimalPlace","test","parseNumberValue","toArray","str","toJSON","parseInt","minusOne","lcm","isInstance","low","random","restricted","top","fromArray","DataChunk","streamId","segmentType","bytes","endFragment","DashJSError","code","message","data","MssFragmentInfoController","instance","logger","fragmentModel","started","loadFragmentTimeout","startFragmentTime","streamProcessor","baseURLController","debug","stop","clearTimeout","loadNextFragmentInfo","representation","getRepresentationController","getCurrentRepresentation","adaptation","period","mpd","manifest","Period_asArray","AdaptationSet_asArray","segments","SegmentTemplate","SegmentTimeline","S_asArray","request","segment","getMediaInfo","adaptationIndex","id","resolve","path","media","replace","bandwidth","tManifest","getRequestForSegment","requestFragment","getFragmentModel","isFragmentLoadedOrPending","executeRequest","initialize","getType","controllerType","fragmentInfoLoaded","deltaFragmentTime","deltaTime","delay","response","Date","getTime","setTimeout","error","reset","getLogger","__dashjs_factory_name","dashjs","FactoryMaker","getClassFactory","mssErrors","MSS_NO_TFRF_CODE","MSS_UNSUPPORTED_CODEC_CODE","MSS_NO_TFRF_MESSAGE","MSS_UNSUPPORTED_CODEC_MESSAGE","MssFragmentMoofProcessor","dashMetrics","playbackController","errorHandler","errHandler","eventBus","ISOBoxer","processTfrf","tfrf","tfdt","timeShiftBufferDepth","entry","segmentTime","endTime","S","entries","parseFloat","fragment_absolute_time","baseMediaDecodeTime","updateDVR","getStreamInfo","manifestInfo","fragment_duration","lastSegment","isPaused","splice","trigger","Events","sender","newDuration","MssErrors","dvrInfos","getCurrentDVRInfo","addDVRInfo","updateCurrentTime","getBoxOffset","parent","offset","boxes","size","convertFragment","isoFile","parseBuffer","tfhd","fetch","track_ID","traf","createFullBox","version","flags","trun","tfxd","_parent","sepiff","usertype","saio","entry_count","saiz","sample_count","default_sample_info_size","sample_info_size","NumberOfEntries","moof","getLength","data_offset","trafPosInMoof","sencPosInTraf","write","updateSegmentList","MssFragmentMoovProcessor","adaptationSet","contentProtection","trackId","constants","protectionController","createMoovBox","moov","createBox","mvhd","creation_time","modification_time","round","rate","volume","reserved1","reserved2","matrix","pre_defined","next_track_ID","createMvhdBox","trak","tkhd","layer","alternate_group","reserved3","width","height","createTkhdBox","mdia","mdhd","language","lang","createMdhdBox","hdlr","VIDEO","handler_type","AUDIO","reserved","createHdlrBox","minf","vmhd","graphicsmode","opcolor","createVmhdBox","smhd","balance","createSmhdBox","dinf","dref","location","createDrefBox","stbl","_data","stsd","codec","codecs","substring","avc1","data_reference_index","pre_defined1","pre_defined2","horizresolution","vertresolution","frame_count","compressorname","depth","pre_defined3","naluBytes","avcC","avcCLength","sps","pps","AVCProfileIndication","AVCLevelIndication","profile_compatibility","nalus","codecPrivateData","hexStringtoBuffer","Uint8Array","set","createAVC1ConfigurationRecord","sinf","createOriginalFormatBox","createSchemeTypeBox","createSchemeInformationBox","createAVCVisualSampleEntry","mp4a","channelcount","audioChannels","samplesize","reserved_3","samplerate","audioSamplingRate","esds","audioSpecificConfig","esdsLength","createMPEG4AACESDescriptor","createMP4AudioSampleEntry","createSampleEntry","createStsdBox","trex","default_sample_description_index","default_sample_duration","default_sample_size","default_sample_flags","createTrexBox","keySystems","pssh_bytes","pssh","parsedBuffer","initData","Utils","appendBox","createProtectionSystemSpecificHeaderBox","getSupportedKeySystemsFromContentProtection","data_format","charCodeAt","stringToCharCode","schm","scheme_type","scheme_version","schi","tenc","default_IsEncrypted","default_IV_size","default_KID","createTrackEncryptionBox","buf","generateMoov","rep","ContentProtection","ftyp","major_brand","minor_version","compatible_brands","createFtypBox","createFile","arrayEqual","arr1","arr2","every","element","saioProcessor","_procFullBox","_procField","_procFieldArray","saizProcessor","sencProcessor","_procEntries","_procEntryField","_procSubEntries","clearAndCryptedData","uuidProcessor","_parsing","fragment_count","MssFragmentProcessor","mssFragmentMoovProcessor","mssFragmentMoofProcessor","context","processFragment","addBoxProcessor","MssParser","initialBufferSettings","BASE64","manifestModel","mediaPlayerModel","settings","SUPPORTED_CODECS","ROLE","ACCESSIBILITY","samplingFrequencyIndex","96000","88200","64000","48000","44100","32000","24000","22050","16000","12000","11025","8000","7350","mimeTypeMap","getAttributeAsBoolean","node","attrName","getAttribute","mapAdaptationSet","streamIndex","segmentTemplate","qualityLevels","representations","fallBackId","contentType","mimeType","subType","maxWidth","maxHeight","role","schemeIdUri","Role","Role_asArray","accessibility","Accessibility","Accessibility_asArray","mediaUrl","streamIndexTimeScale","prevSegment","segmentTimeline","chunks","getElementsByTagName","MAX_SAFE_INTEGER","mapSegmentTimeline","availabilityTimeOffset","mapSegmentTemplate","BaseURL","Id","mapRepresentation","Representation","Representation_asArray","qualityLevel","fourCCValue","isNaN","toUpperCase","warn","nalHeader","exec","substr","getH264Codec","codecPrivateDataHex","arr16","indexFreq","extensionSamplingFrequencyIndex","samplingRate","objectType","Channels","Uint16Array","setAttribute","getAACCodec","STPP","getKIDFromProtectionHeader","protectionHeader","wrmHeader","KID","uuid","prHeader","recordType","recordLength","recordValue","subarray","getWRMHeaderFromPRHeader","decodeArray","firstChild","buffer","fromCharCode","DOMParser","parseFromString","querySelector","textContent","swapBytes","pos1","pos2","temp","processManifest","xmlDoc","adaptations","timestampOffset","segmentDuration","contentProtections","smoothStreamingMedia","protection","protocol","profiles","dvrWindowLength","mediaPresentationDuration","minBufferTime","ttmlTimeIsRelative","refreshManifestOnSwitchTrack","doNotUpdateDVRWindowOnBufferUpdated","ignorePostponeTimePeriod","Period","streams","AdaptationSet","mapPeriod","pro","__text","__prefix","pro_asArray","createPRContentProtection","widevineCP","wvCencHeader","encodeASCII","createWidevineContentProtection","ContentProtection_asArray","initialization","targetLiveDelay","getLiveDelay","streaming","liveDelayFragmentCount","targetDelayCapping","liveDelay","bufferTime","stableBufferTime","bufferTimeAtTopQuality","bufferTimeAtTopQualityLongForm","calcFromSegmentTimeline","timeShiftBuffer","update","prevManifest","getValue","presentationTimeOffset","parse","performance","now","parseDOM","xmlParseTime","mss2dashTime","toPrecision","getMatchers","getIron","MssHandler","mssParser","fragmentInfoControllers","initSegmentType","streamController","mssFragmentProcessor","getStreamProcessor","getActiveStreamProcessors","filter","processor","getFragmentInfoController","controller","startFragmentInfoControllers","forEach","TEXT","fragmentInfoController","onInitFragmentNeeded","chunk","createDataChunk","streamInfo","INIT_FRAGMENT_LOADED","onSegmentMediaLoaded","isDynamic","dvrWindowSize","onPlaybackPaused","getIsDynamic","onPlaybackSeekAsked","onTTMLPreProcess","ttmlSubtitles","off","INIT_FRAGMENT_NEEDED","createMssParser","registerEvents","on","priority","getSingletonFactoryByName","getClassName","EVENT_PRIORITY_HIGH","updateClassFactory","global","webpackPolyfill","deprecate","paths","children"],"mappings":"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","file":"dash.mss.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dashjs\"] = factory();\n\telse\n\t\troot[\"dashjs\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 98);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport { HTTPRequest } from '../vo/metrics/HTTPRequest';\n\n/**\n * @class\n * @ignore\n */\nclass FragmentRequest {\n    constructor(url) {\n        this.action = FragmentRequest.ACTION_DOWNLOAD;\n        this.startTime = NaN;\n        this.mediaStartTime = NaN;\n        this.mediaType = null;\n        this.mediaInfo = null;\n        this.type = null;\n        this.duration = NaN;\n        this.timescale = NaN;\n        this.range = null;\n        this.url = url || null;\n        this.serviceLocation = null;\n        this.requestStartDate = null;\n        this.firstByteDate = null;\n        this.requestEndDate = null;\n        this.quality = NaN;\n        this.index = NaN;\n        this.availabilityStartTime = null;\n        this.availabilityEndTime = null;\n        this.wallStartTime = null;\n        this.bytesLoaded = NaN;\n        this.bytesTotal = NaN;\n        this.delayLoadingTime = NaN;\n        this.responseType = 'arraybuffer';\n        this.representationId = null;\n    }\n\n    isInitializationRequest() {\n        return (this.type && this.type === HTTPRequest.INIT_SEGMENT_TYPE);\n    }\n\n    setInfo(info) {\n        this.type = info && info.init ? HTTPRequest.INIT_SEGMENT_TYPE : HTTPRequest.MEDIA_SEGMENT_TYPE;\n        this.url = info && info.url ? info.url : null;\n        this.range = info && info.range ? info.range.start + '-' + info.range.end : null;\n        this.mediaType = info && info.mediaType ? info.mediaType : null;\n    }\n}\n\nFragmentRequest.ACTION_DOWNLOAD = 'download';\nFragmentRequest.ACTION_COMPLETE = 'complete';\n\nexport default FragmentRequest;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass EventsBase {\n    extend (events, config) {\n        if (!events) return;\n\n        let override = config ? config.override : false;\n        let publicOnly = config ? config.publicOnly : false;\n\n\n        for (const evt in events) {\n            if (!events.hasOwnProperty(evt) || (this[evt] && !override)) continue;\n            if (publicOnly && events[evt].indexOf('public_') === -1) continue;\n            this[evt] = events[evt];\n\n        }\n    }\n}\n\nexport default EventsBase;","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass ErrorsBase {\n    extend (errors, config) {\n        if (!errors) return;\n\n        let override = config ? config.override : false;\n        let publicOnly = config ? config.publicOnly : false;\n\n\n        for (const err in errors) {\n            if (!errors.hasOwnProperty(err) || (this[err] && !override)) continue;\n            if (publicOnly && errors[err].indexOf('public_') === -1) continue;\n            this[err] = errors[err];\n\n        }\n    }\n}\n\nexport default ErrorsBase;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventsBase from '../core/events/EventsBase';\n\n/**\n * @class\n * @implements EventsBase\n */\nclass MediaPlayerEvents extends EventsBase {\n\n    /**\n     * @description Public facing external events to be used when developing a player that implements dash.js.\n     */\n    constructor() {\n        super();\n        /**\n         * Triggered when playback will not start yet\n         * as the MPD's availabilityStartTime is in the future.\n         * Check delay property in payload to determine time before playback will start.\n         * @event MediaPlayerEvents#AST_IN_FUTURE\n         */\n        this.AST_IN_FUTURE = 'astInFuture';\n\n        /**\n         * Triggered when the video element's buffer state changes to stalled.\n         * Check mediaType in payload to determine type (Video, Audio, FragmentedText).\n         * @event MediaPlayerEvents#BUFFER_EMPTY\n         */\n        this.BUFFER_EMPTY = 'bufferStalled';\n\n        /**\n         * Triggered when the video element's buffer state changes to loaded.\n         * Check mediaType in payload to determine type (Video, Audio, FragmentedText).\n         * @event MediaPlayerEvents#BUFFER_LOADED\n         */\n        this.BUFFER_LOADED = 'bufferLoaded';\n\n        /**\n         * Triggered when the video element's buffer state changes, either stalled or loaded. Check payload for state.\n         * @event MediaPlayerEvents#BUFFER_LEVEL_STATE_CHANGED\n         */\n        this.BUFFER_LEVEL_STATE_CHANGED = 'bufferStateChanged';\n\n        /**\n         * Triggered when the buffer level of a media type has been updated\n         * @event MediaPlayerEvents#BUFFER_LEVEL_UPDATED\n         */\n        this.BUFFER_LEVEL_UPDATED = 'bufferLevelUpdated';\n\n        /**\n         * Triggered when a dynamic stream changed to static (transition phase between Live and On-Demand).\n         * @event MediaPlayerEvents#DYNAMIC_TO_STATIC\n         */\n        this.DYNAMIC_TO_STATIC = 'dynamicToStatic';\n\n        /**\n         * Triggered when there is an error from the element or MSE source buffer.\n         * @event MediaPlayerEvents#ERROR\n         */\n        this.ERROR = 'error';\n        /**\n         * Triggered when a fragment download has completed.\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_COMPLETED\n         */\n        this.FRAGMENT_LOADING_COMPLETED = 'fragmentLoadingCompleted';\n\n        /**\n         * Triggered when a partial fragment download has completed.\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_PROGRESS\n         */\n        this.FRAGMENT_LOADING_PROGRESS = 'fragmentLoadingProgress';\n        /**\n         * Triggered when a fragment download has started.\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_STARTED\n         */\n        this.FRAGMENT_LOADING_STARTED = 'fragmentLoadingStarted';\n\n        /**\n         * Triggered when a fragment download is abandoned due to detection of slow download base on the ABR abandon rule..\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_ABANDONED\n         */\n        this.FRAGMENT_LOADING_ABANDONED = 'fragmentLoadingAbandoned';\n\n        /**\n         * Triggered when {@link module:Debug} logger methods are called.\n         * @event MediaPlayerEvents#LOG\n         */\n        this.LOG = 'log';\n\n        /**\n         * Triggered when the manifest load is complete\n         * @event MediaPlayerEvents#MANIFEST_LOADED\n         */\n        this.MANIFEST_LOADED = 'manifestLoaded';\n\n        /**\n         * Triggered anytime there is a change to the overall metrics.\n         * @event MediaPlayerEvents#METRICS_CHANGED\n         */\n        this.METRICS_CHANGED = 'metricsChanged';\n\n        /**\n         * Triggered when an individual metric is added, updated or cleared.\n         * @event MediaPlayerEvents#METRIC_CHANGED\n         */\n        this.METRIC_CHANGED = 'metricChanged';\n\n        /**\n         * Triggered every time a new metric is added.\n         * @event MediaPlayerEvents#METRIC_ADDED\n         */\n        this.METRIC_ADDED = 'metricAdded';\n\n        /**\n         * Triggered every time a metric is updated.\n         * @event MediaPlayerEvents#METRIC_UPDATED\n         */\n        this.METRIC_UPDATED = 'metricUpdated';\n\n        /**\n         * Triggered when a new stream (period) starts.\n         * @event MediaPlayerEvents#PERIOD_SWITCH_STARTED\n         */\n        this.PERIOD_SWITCH_STARTED = 'periodSwitchStarted';\n\n        /**\n         * Triggered at the stream end of a period.\n         * @event MediaPlayerEvents#PERIOD_SWITCH_COMPLETED\n         */\n        this.PERIOD_SWITCH_COMPLETED = 'periodSwitchCompleted';\n\n        /**\n         * Triggered when an ABR up /down switch is initiated; either by user in manual mode or auto mode via ABR rules.\n         * @event MediaPlayerEvents#QUALITY_CHANGE_REQUESTED\n         */\n        this.QUALITY_CHANGE_REQUESTED = 'qualityChangeRequested';\n\n        /**\n         * Triggered when the new ABR quality is being rendered on-screen.\n         * @event MediaPlayerEvents#QUALITY_CHANGE_RENDERED\n         */\n        this.QUALITY_CHANGE_RENDERED = 'qualityChangeRendered';\n\n        /**\n         * Triggered when the new track is being rendered.\n         * @event MediaPlayerEvents#TRACK_CHANGE_RENDERED\n         */\n        this.TRACK_CHANGE_RENDERED = 'trackChangeRendered';\n\n        /**\n         * Triggered when a stream (period) is being loaded\n         * @event MediaPlayerEvents#STREAM_INITIALIZING\n         */\n        this.STREAM_INITIALIZING = 'streamInitializing';\n\n        /**\n         * Triggered when a stream (period) is loaded\n         * @event MediaPlayerEvents#STREAM_UPDATED\n         */\n        this.STREAM_UPDATED = 'streamUpdated';\n\n        /**\n         * Triggered when a stream (period) is activated\n         * @event MediaPlayerEvents#STREAM_ACTIVATED\n         */\n        this.STREAM_ACTIVATED = 'streamActivated';\n\n        /**\n         * Triggered when a stream (period) is deactivated\n         * @event MediaPlayerEvents#STREAM_DEACTIVATED\n         */\n        this.STREAM_DEACTIVATED = 'streamDeactivated';\n\n        /**\n         * Triggered when a stream (period) is activated\n         * @event MediaPlayerEvents#STREAM_INITIALIZED\n         */\n        this.STREAM_INITIALIZED = 'streamInitialized';\n\n        /**\n         * Triggered when the player has been reset.\n         * @event MediaPlayerEvents#STREAM_TEARDOWN_COMPLETE\n         */\n        this.STREAM_TEARDOWN_COMPLETE = 'streamTeardownComplete';\n\n        /**\n         * Triggered once all text tracks detected in the MPD are added to the video element.\n         * @event MediaPlayerEvents#TEXT_TRACKS_ADDED\n         */\n        this.TEXT_TRACKS_ADDED = 'allTextTracksAdded';\n\n        /**\n         * Triggered when a text track is added to the video element's TextTrackList\n         * @event MediaPlayerEvents#TEXT_TRACK_ADDED\n         */\n        this.TEXT_TRACK_ADDED = 'textTrackAdded';\n\n        /**\n         * Triggered when a ttml chunk is parsed.\n         * @event MediaPlayerEvents#TTML_PARSED\n         */\n        this.TTML_PARSED = 'ttmlParsed';\n\n        /**\n         * Triggered when a ttml chunk has to be parsed.\n         * @event MediaPlayerEvents#TTML_TO_PARSE\n         */\n        this.TTML_TO_PARSE = 'ttmlToParse';\n\n        /**\n         * Triggered when a caption is rendered.\n         * @event MediaPlayerEvents#CAPTION_RENDERED\n         */\n        this.CAPTION_RENDERED = 'captionRendered';\n\n        /**\n         * Triggered when the caption container is resized.\n         * @event MediaPlayerEvents#CAPTION_CONTAINER_RESIZE\n         */\n        this.CAPTION_CONTAINER_RESIZE = 'captionContainerResize';\n\n        /**\n         * Sent when enough data is available that the media can be played,\n         * at least for a couple of frames.  This corresponds to the\n         * HAVE_ENOUGH_DATA readyState.\n         * @event MediaPlayerEvents#CAN_PLAY\n         */\n        this.CAN_PLAY = 'canPlay';\n\n        /**\n         * This corresponds to the CAN_PLAY_THROUGH readyState.\n         * @event MediaPlayerEvents#CAN_PLAY_THROUGH\n         */\n        this.CAN_PLAY_THROUGH = 'canPlayThrough';\n\n        /**\n         * Sent when playback completes.\n         * @event MediaPlayerEvents#PLAYBACK_ENDED\n         */\n        this.PLAYBACK_ENDED = 'playbackEnded';\n\n        /**\n         * Sent when an error occurs.  The element's error\n         * attribute contains more information.\n         * @event MediaPlayerEvents#PLAYBACK_ERROR\n         */\n        this.PLAYBACK_ERROR = 'playbackError';\n\n        /**\n         * Sent when playback is not allowed (for example if user gesture is needed).\n         * @event MediaPlayerEvents#PLAYBACK_NOT_ALLOWED\n         */\n        this.PLAYBACK_NOT_ALLOWED = 'playbackNotAllowed';\n\n        /**\n         * The media's metadata has finished loading; all attributes now\n         * contain as much useful information as they're going to.\n         * @event MediaPlayerEvents#PLAYBACK_METADATA_LOADED\n         */\n        this.PLAYBACK_METADATA_LOADED = 'playbackMetaDataLoaded';\n\n        /**\n         * The media's metadata has finished loading; all attributes now\n         * contain as much useful information as they're going to.\n         * @event MediaPlayerEvents#PLAYBACK_METADATA_LOADED\n         */\n        this.PLAYBACK_LOADED_DATA = 'playbackLoadedData';\n\n        /**\n         * Sent when playback is paused.\n         * @event MediaPlayerEvents#PLAYBACK_PAUSED\n         */\n        this.PLAYBACK_PAUSED = 'playbackPaused';\n\n        /**\n         * Sent when the media begins to play (either for the first time, after having been paused,\n         * or after ending and then restarting).\n         *\n         * @event MediaPlayerEvents#PLAYBACK_PLAYING\n         */\n        this.PLAYBACK_PLAYING = 'playbackPlaying';\n\n        /**\n         * Sent periodically to inform interested parties of progress downloading\n         * the media. Information about the current amount of the media that has\n         * been downloaded is available in the media element's buffered attribute.\n         * @event MediaPlayerEvents#PLAYBACK_PROGRESS\n         */\n        this.PLAYBACK_PROGRESS = 'playbackProgress';\n\n        /**\n         * Sent when the playback speed changes.\n         * @event MediaPlayerEvents#PLAYBACK_RATE_CHANGED\n         */\n        this.PLAYBACK_RATE_CHANGED = 'playbackRateChanged';\n\n        /**\n         * Sent when a seek operation completes.\n         * @event MediaPlayerEvents#PLAYBACK_SEEKED\n         */\n        this.PLAYBACK_SEEKED = 'playbackSeeked';\n\n        /**\n         * Sent when a seek operation begins.\n         * @event MediaPlayerEvents#PLAYBACK_SEEKING\n         */\n        this.PLAYBACK_SEEKING = 'playbackSeeking';\n\n        /**\n         * Sent when a seek operation has been asked.\n         * @event MediaPlayerEvents#PLAYBACK_SEEK_ASKED\n         */\n        this.PLAYBACK_SEEK_ASKED = 'playbackSeekAsked';\n\n        /**\n         * Sent when the video element reports stalled\n         * @event MediaPlayerEvents#PLAYBACK_STALLED\n         */\n        this.PLAYBACK_STALLED = 'playbackStalled';\n\n        /**\n         * Sent when playback of the media starts after having been paused;\n         * that is, when playback is resumed after a prior pause event.\n         *\n         * @event MediaPlayerEvents#PLAYBACK_STARTED\n         */\n        this.PLAYBACK_STARTED = 'playbackStarted';\n\n        /**\n         * The time indicated by the element's currentTime attribute has changed.\n         * @event MediaPlayerEvents#PLAYBACK_TIME_UPDATED\n         */\n        this.PLAYBACK_TIME_UPDATED = 'playbackTimeUpdated';\n\n        /**\n         * Sent when the media playback has stopped because of a temporary lack of data.\n         *\n         * @event MediaPlayerEvents#PLAYBACK_WAITING\n         */\n        this.PLAYBACK_WAITING = 'playbackWaiting';\n\n        /**\n         * Manifest validity changed - As a result of an MPD validity expiration event.\n         * @event MediaPlayerEvents#MANIFEST_VALIDITY_CHANGED\n         */\n        this.MANIFEST_VALIDITY_CHANGED = 'manifestValidityChanged';\n\n        /**\n         * Dash events are triggered at their respective start points on the timeline.\n         * @event MediaPlayerEvents#EVENT_MODE_ON_START\n         */\n        this.EVENT_MODE_ON_START = 'eventModeOnStart';\n\n        /**\n         * Dash events are triggered as soon as they were parsed.\n         * @event MediaPlayerEvents#EVENT_MODE_ON_RECEIVE\n         */\n        this.EVENT_MODE_ON_RECEIVE = 'eventModeOnReceive';\n\n        /**\n         * Event that is dispatched whenever the player encounters a potential conformance validation that might lead to unexpected/not optimal behavior\n         * @event MediaPlayerEvents#CONFORMANCE_VIOLATION\n         */\n        this.CONFORMANCE_VIOLATION = 'conformanceViolation';\n\n        /**\n         * Event that is dispatched whenever the player switches to a different representation\n         * @event MediaPlayerEvents#REPRESENTATION_SWITCH\n         */\n        this.REPRESENTATION_SWITCH = 'representationSwitch';\n    }\n}\n\nlet mediaPlayerEvents = new MediaPlayerEvents();\nexport default mediaPlayerEvents;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc This Object holds reference to the HTTPRequest for manifest, fragment and xlink loading.\n * Members which are not defined in ISO23009-1 Annex D should be prefixed by a _ so that they are ignored\n * by Metrics Reporting code.\n * @ignore\n */\nclass HTTPRequest {\n    /**\n     * @class\n     */\n    constructor() {\n        /**\n         * Identifier of the TCP connection on which the HTTP request was sent.\n         * @public\n         */\n        this.tcpid = null;\n        /**\n         * This is an optional parameter and should not be included in HTTP request/response transactions for progressive download.\n         * The type of the request:\n         * - MPD\n         * - XLink expansion\n         * - Initialization Fragment\n         * - Index Fragment\n         * - Media Fragment\n         * - Bitstream Switching Fragment\n         * - other\n         * @public\n         */\n        this.type = null;\n        /**\n         * The original URL (before any redirects or failures)\n         * @public\n         */\n        this.url = null;\n        /**\n         * The actual URL requested, if different from above\n         * @public\n         */\n        this.actualurl = null;\n        /**\n         * The contents of the byte-range-spec part of the HTTP Range header.\n         * @public\n         */\n        this.range = null;\n        /**\n         * Real-Time | The real time at which the request was sent.\n         * @public\n         */\n        this.trequest = null;\n        /**\n         * Real-Time | The real time at which the first byte of the response was received.\n         * @public\n         */\n        this.tresponse = null;\n        /**\n         * The HTTP response code.\n         * @public\n         */\n        this.responsecode = null;\n        /**\n         * The duration of the throughput trace intervals (ms), for successful requests only.\n         * @public\n         */\n        this.interval = null;\n        /**\n         * Throughput traces, for successful requests only.\n         * @public\n         */\n        this.trace = [];\n\n        /**\n         * Type of stream (\"audio\" | \"video\" etc..)\n         * @public\n         */\n        this._stream = null;\n        /**\n         * Real-Time | The real time at which the request finished.\n         * @public\n         */\n        this._tfinish = null;\n        /**\n         * The duration of the media requests, if available, in seconds.\n         * @public\n         */\n        this._mediaduration = null;\n        /**\n         * The media segment quality\n         * @public\n         */\n        this._quality = null;\n        /**\n         * all the response headers from request.\n         * @public\n         */\n        this._responseHeaders = null;\n        /**\n         * The selected service location for the request. string.\n         * @public\n         */\n        this._serviceLocation = null;\n    }\n}\n\n/**\n * @classdesc This Object holds reference to the progress of the HTTPRequest.\n * @ignore\n */\nclass HTTPRequestTrace {\n    /**\n    * @class\n    */\n    constructor() {\n        /**\n         * Real-Time | Measurement stream start.\n         * @public\n         */\n        this.s = null;\n        /**\n         * Measurement stream duration (ms).\n         * @public\n         */\n        this.d = null;\n        /**\n         * List of integers counting the bytes received in each trace interval within the measurement stream.\n         * @public\n         */\n        this.b = [];\n        /**\n         * Measurement throughput in kbits/s\n         * @public\n         */\n         this.t = null;\n    }\n}\n\nHTTPRequest.GET = 'GET';\nHTTPRequest.HEAD = 'HEAD';\nHTTPRequest.MPD_TYPE = 'MPD';\nHTTPRequest.XLINK_EXPANSION_TYPE = 'XLinkExpansion';\nHTTPRequest.INIT_SEGMENT_TYPE = 'InitializationSegment';\nHTTPRequest.INDEX_SEGMENT_TYPE = 'IndexSegment';\nHTTPRequest.MEDIA_SEGMENT_TYPE = 'MediaSegment';\nHTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE = 'BitstreamSwitchingSegment';\nHTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE = 'FragmentInfoSegment';\nHTTPRequest.LICENSE = 'license';\nHTTPRequest.OTHER_TYPE = 'other';\n\nexport { HTTPRequest, HTTPRequestTrace };\n","var bigInt=function(undefined){\"use strict\";var BASE=1e7,LOG_BASE=7,MAX_INT=9007199254740992,MAX_INT_ARR=smallToArray(MAX_INT),DEFAULT_ALPHABET=\"0123456789abcdefghijklmnopqrstuvwxyz\";var supportsNativeBigInt=typeof BigInt===\"function\";function Integer(v,radix,alphabet,caseSensitive){if(typeof v===\"undefined\")return Integer[0];if(typeof radix!==\"undefined\")return+radix===10&&!alphabet?parseValue(v):parseBase(v,radix,alphabet,caseSensitive);return parseValue(v)}function BigInteger(value,sign){this.value=value;this.sign=sign;this.isSmall=false}BigInteger.prototype=Object.create(Integer.prototype);function SmallInteger(value){this.value=value;this.sign=value<0;this.isSmall=true}SmallInteger.prototype=Object.create(Integer.prototype);function NativeBigInt(value){this.value=value}NativeBigInt.prototype=Object.create(Integer.prototype);function isPrecise(n){return-MAX_INT<n&&n<MAX_INT}function smallToArray(n){if(n<1e7)return[n];if(n<1e14)return[n%1e7,Math.floor(n/1e7)];return[n%1e7,Math.floor(n/1e7)%1e7,Math.floor(n/1e14)]}function arrayToSmall(arr){trim(arr);var length=arr.length;if(length<4&&compareAbs(arr,MAX_INT_ARR)<0){switch(length){case 0:return 0;case 1:return arr[0];case 2:return arr[0]+arr[1]*BASE;default:return arr[0]+(arr[1]+arr[2]*BASE)*BASE}}return arr}function trim(v){var i=v.length;while(v[--i]===0);v.length=i+1}function createArray(length){var x=new Array(length);var i=-1;while(++i<length){x[i]=0}return x}function truncate(n){if(n>0)return Math.floor(n);return Math.ceil(n)}function add(a,b){var l_a=a.length,l_b=b.length,r=new Array(l_a),carry=0,base=BASE,sum,i;for(i=0;i<l_b;i++){sum=a[i]+b[i]+carry;carry=sum>=base?1:0;r[i]=sum-carry*base}while(i<l_a){sum=a[i]+carry;carry=sum===base?1:0;r[i++]=sum-carry*base}if(carry>0)r.push(carry);return r}function addAny(a,b){if(a.length>=b.length)return add(a,b);return add(b,a)}function addSmall(a,carry){var l=a.length,r=new Array(l),base=BASE,sum,i;for(i=0;i<l;i++){sum=a[i]-base+carry;carry=Math.floor(sum/base);r[i]=sum-carry*base;carry+=1}while(carry>0){r[i++]=carry%base;carry=Math.floor(carry/base)}return r}BigInteger.prototype.add=function(v){var n=parseValue(v);if(this.sign!==n.sign){return this.subtract(n.negate())}var a=this.value,b=n.value;if(n.isSmall){return new BigInteger(addSmall(a,Math.abs(b)),this.sign)}return new BigInteger(addAny(a,b),this.sign)};BigInteger.prototype.plus=BigInteger.prototype.add;SmallInteger.prototype.add=function(v){var n=parseValue(v);var a=this.value;if(a<0!==n.sign){return this.subtract(n.negate())}var b=n.value;if(n.isSmall){if(isPrecise(a+b))return new SmallInteger(a+b);b=smallToArray(Math.abs(b))}return new BigInteger(addSmall(b,Math.abs(a)),a<0)};SmallInteger.prototype.plus=SmallInteger.prototype.add;NativeBigInt.prototype.add=function(v){return new NativeBigInt(this.value+parseValue(v).value)};NativeBigInt.prototype.plus=NativeBigInt.prototype.add;function subtract(a,b){var a_l=a.length,b_l=b.length,r=new Array(a_l),borrow=0,base=BASE,i,difference;for(i=0;i<b_l;i++){difference=a[i]-borrow-b[i];if(difference<0){difference+=base;borrow=1}else borrow=0;r[i]=difference}for(i=b_l;i<a_l;i++){difference=a[i]-borrow;if(difference<0)difference+=base;else{r[i++]=difference;break}r[i]=difference}for(;i<a_l;i++){r[i]=a[i]}trim(r);return r}function subtractAny(a,b,sign){var value;if(compareAbs(a,b)>=0){value=subtract(a,b)}else{value=subtract(b,a);sign=!sign}value=arrayToSmall(value);if(typeof value===\"number\"){if(sign)value=-value;return new SmallInteger(value)}return new BigInteger(value,sign)}function subtractSmall(a,b,sign){var l=a.length,r=new Array(l),carry=-b,base=BASE,i,difference;for(i=0;i<l;i++){difference=a[i]+carry;carry=Math.floor(difference/base);difference%=base;r[i]=difference<0?difference+base:difference}r=arrayToSmall(r);if(typeof r===\"number\"){if(sign)r=-r;return new SmallInteger(r)}return new BigInteger(r,sign)}BigInteger.prototype.subtract=function(v){var n=parseValue(v);if(this.sign!==n.sign){return this.add(n.negate())}var a=this.value,b=n.value;if(n.isSmall)return subtractSmall(a,Math.abs(b),this.sign);return subtractAny(a,b,this.sign)};BigInteger.prototype.minus=BigInteger.prototype.subtract;SmallInteger.prototype.subtract=function(v){var n=parseValue(v);var a=this.value;if(a<0!==n.sign){return this.add(n.negate())}var b=n.value;if(n.isSmall){return new SmallInteger(a-b)}return subtractSmall(b,Math.abs(a),a>=0)};SmallInteger.prototype.minus=SmallInteger.prototype.subtract;NativeBigInt.prototype.subtract=function(v){return new NativeBigInt(this.value-parseValue(v).value)};NativeBigInt.prototype.minus=NativeBigInt.prototype.subtract;BigInteger.prototype.negate=function(){return new BigInteger(this.value,!this.sign)};SmallInteger.prototype.negate=function(){var sign=this.sign;var small=new SmallInteger(-this.value);small.sign=!sign;return small};NativeBigInt.prototype.negate=function(){return new NativeBigInt(-this.value)};BigInteger.prototype.abs=function(){return new BigInteger(this.value,false)};SmallInteger.prototype.abs=function(){return new SmallInteger(Math.abs(this.value))};NativeBigInt.prototype.abs=function(){return new NativeBigInt(this.value>=0?this.value:-this.value)};function multiplyLong(a,b){var a_l=a.length,b_l=b.length,l=a_l+b_l,r=createArray(l),base=BASE,product,carry,i,a_i,b_j;for(i=0;i<a_l;++i){a_i=a[i];for(var j=0;j<b_l;++j){b_j=b[j];product=a_i*b_j+r[i+j];carry=Math.floor(product/base);r[i+j]=product-carry*base;r[i+j+1]+=carry}}trim(r);return r}function multiplySmall(a,b){var l=a.length,r=new Array(l),base=BASE,carry=0,product,i;for(i=0;i<l;i++){product=a[i]*b+carry;carry=Math.floor(product/base);r[i]=product-carry*base}while(carry>0){r[i++]=carry%base;carry=Math.floor(carry/base)}return r}function shiftLeft(x,n){var r=[];while(n-- >0)r.push(0);return r.concat(x)}function multiplyKaratsuba(x,y){var n=Math.max(x.length,y.length);if(n<=30)return multiplyLong(x,y);n=Math.ceil(n/2);var b=x.slice(n),a=x.slice(0,n),d=y.slice(n),c=y.slice(0,n);var ac=multiplyKaratsuba(a,c),bd=multiplyKaratsuba(b,d),abcd=multiplyKaratsuba(addAny(a,b),addAny(c,d));var product=addAny(addAny(ac,shiftLeft(subtract(subtract(abcd,ac),bd),n)),shiftLeft(bd,2*n));trim(product);return product}function useKaratsuba(l1,l2){return-.012*l1-.012*l2+15e-6*l1*l2>0}BigInteger.prototype.multiply=function(v){var n=parseValue(v),a=this.value,b=n.value,sign=this.sign!==n.sign,abs;if(n.isSmall){if(b===0)return Integer[0];if(b===1)return this;if(b===-1)return this.negate();abs=Math.abs(b);if(abs<BASE){return new BigInteger(multiplySmall(a,abs),sign)}b=smallToArray(abs)}if(useKaratsuba(a.length,b.length))return new BigInteger(multiplyKaratsuba(a,b),sign);return new BigInteger(multiplyLong(a,b),sign)};BigInteger.prototype.times=BigInteger.prototype.multiply;function multiplySmallAndArray(a,b,sign){if(a<BASE){return new BigInteger(multiplySmall(b,a),sign)}return new BigInteger(multiplyLong(b,smallToArray(a)),sign)}SmallInteger.prototype._multiplyBySmall=function(a){if(isPrecise(a.value*this.value)){return new SmallInteger(a.value*this.value)}return multiplySmallAndArray(Math.abs(a.value),smallToArray(Math.abs(this.value)),this.sign!==a.sign)};BigInteger.prototype._multiplyBySmall=function(a){if(a.value===0)return Integer[0];if(a.value===1)return this;if(a.value===-1)return this.negate();return multiplySmallAndArray(Math.abs(a.value),this.value,this.sign!==a.sign)};SmallInteger.prototype.multiply=function(v){return parseValue(v)._multiplyBySmall(this)};SmallInteger.prototype.times=SmallInteger.prototype.multiply;NativeBigInt.prototype.multiply=function(v){return new NativeBigInt(this.value*parseValue(v).value)};NativeBigInt.prototype.times=NativeBigInt.prototype.multiply;function square(a){var l=a.length,r=createArray(l+l),base=BASE,product,carry,i,a_i,a_j;for(i=0;i<l;i++){a_i=a[i];carry=0-a_i*a_i;for(var j=i;j<l;j++){a_j=a[j];product=2*(a_i*a_j)+r[i+j]+carry;carry=Math.floor(product/base);r[i+j]=product-carry*base}r[i+l]=carry}trim(r);return r}BigInteger.prototype.square=function(){return new BigInteger(square(this.value),false)};SmallInteger.prototype.square=function(){var value=this.value*this.value;if(isPrecise(value))return new SmallInteger(value);return new BigInteger(square(smallToArray(Math.abs(this.value))),false)};NativeBigInt.prototype.square=function(v){return new NativeBigInt(this.value*this.value)};function divMod1(a,b){var a_l=a.length,b_l=b.length,base=BASE,result=createArray(b.length),divisorMostSignificantDigit=b[b_l-1],lambda=Math.ceil(base/(2*divisorMostSignificantDigit)),remainder=multiplySmall(a,lambda),divisor=multiplySmall(b,lambda),quotientDigit,shift,carry,borrow,i,l,q;if(remainder.length<=a_l)remainder.push(0);divisor.push(0);divisorMostSignificantDigit=divisor[b_l-1];for(shift=a_l-b_l;shift>=0;shift--){quotientDigit=base-1;if(remainder[shift+b_l]!==divisorMostSignificantDigit){quotientDigit=Math.floor((remainder[shift+b_l]*base+remainder[shift+b_l-1])/divisorMostSignificantDigit)}carry=0;borrow=0;l=divisor.length;for(i=0;i<l;i++){carry+=quotientDigit*divisor[i];q=Math.floor(carry/base);borrow+=remainder[shift+i]-(carry-q*base);carry=q;if(borrow<0){remainder[shift+i]=borrow+base;borrow=-1}else{remainder[shift+i]=borrow;borrow=0}}while(borrow!==0){quotientDigit-=1;carry=0;for(i=0;i<l;i++){carry+=remainder[shift+i]-base+divisor[i];if(carry<0){remainder[shift+i]=carry+base;carry=0}else{remainder[shift+i]=carry;carry=1}}borrow+=carry}result[shift]=quotientDigit}remainder=divModSmall(remainder,lambda)[0];return[arrayToSmall(result),arrayToSmall(remainder)]}function divMod2(a,b){var a_l=a.length,b_l=b.length,result=[],part=[],base=BASE,guess,xlen,highx,highy,check;while(a_l){part.unshift(a[--a_l]);trim(part);if(compareAbs(part,b)<0){result.push(0);continue}xlen=part.length;highx=part[xlen-1]*base+part[xlen-2];highy=b[b_l-1]*base+b[b_l-2];if(xlen>b_l){highx=(highx+1)*base}guess=Math.ceil(highx/highy);do{check=multiplySmall(b,guess);if(compareAbs(check,part)<=0)break;guess--}while(guess);result.push(guess);part=subtract(part,check)}result.reverse();return[arrayToSmall(result),arrayToSmall(part)]}function divModSmall(value,lambda){var length=value.length,quotient=createArray(length),base=BASE,i,q,remainder,divisor;remainder=0;for(i=length-1;i>=0;--i){divisor=remainder*base+value[i];q=truncate(divisor/lambda);remainder=divisor-q*lambda;quotient[i]=q|0}return[quotient,remainder|0]}function divModAny(self,v){var value,n=parseValue(v);if(supportsNativeBigInt){return[new NativeBigInt(self.value/n.value),new NativeBigInt(self.value%n.value)]}var a=self.value,b=n.value;var quotient;if(b===0)throw new Error(\"Cannot divide by zero\");if(self.isSmall){if(n.isSmall){return[new SmallInteger(truncate(a/b)),new SmallInteger(a%b)]}return[Integer[0],self]}if(n.isSmall){if(b===1)return[self,Integer[0]];if(b==-1)return[self.negate(),Integer[0]];var abs=Math.abs(b);if(abs<BASE){value=divModSmall(a,abs);quotient=arrayToSmall(value[0]);var remainder=value[1];if(self.sign)remainder=-remainder;if(typeof quotient===\"number\"){if(self.sign!==n.sign)quotient=-quotient;return[new SmallInteger(quotient),new SmallInteger(remainder)]}return[new BigInteger(quotient,self.sign!==n.sign),new SmallInteger(remainder)]}b=smallToArray(abs)}var comparison=compareAbs(a,b);if(comparison===-1)return[Integer[0],self];if(comparison===0)return[Integer[self.sign===n.sign?1:-1],Integer[0]];if(a.length+b.length<=200)value=divMod1(a,b);else value=divMod2(a,b);quotient=value[0];var qSign=self.sign!==n.sign,mod=value[1],mSign=self.sign;if(typeof quotient===\"number\"){if(qSign)quotient=-quotient;quotient=new SmallInteger(quotient)}else quotient=new BigInteger(quotient,qSign);if(typeof mod===\"number\"){if(mSign)mod=-mod;mod=new SmallInteger(mod)}else mod=new BigInteger(mod,mSign);return[quotient,mod]}BigInteger.prototype.divmod=function(v){var result=divModAny(this,v);return{quotient:result[0],remainder:result[1]}};NativeBigInt.prototype.divmod=SmallInteger.prototype.divmod=BigInteger.prototype.divmod;BigInteger.prototype.divide=function(v){return divModAny(this,v)[0]};NativeBigInt.prototype.over=NativeBigInt.prototype.divide=function(v){return new NativeBigInt(this.value/parseValue(v).value)};SmallInteger.prototype.over=SmallInteger.prototype.divide=BigInteger.prototype.over=BigInteger.prototype.divide;BigInteger.prototype.mod=function(v){return divModAny(this,v)[1]};NativeBigInt.prototype.mod=NativeBigInt.prototype.remainder=function(v){return new NativeBigInt(this.value%parseValue(v).value)};SmallInteger.prototype.remainder=SmallInteger.prototype.mod=BigInteger.prototype.remainder=BigInteger.prototype.mod;BigInteger.prototype.pow=function(v){var n=parseValue(v),a=this.value,b=n.value,value,x,y;if(b===0)return Integer[1];if(a===0)return Integer[0];if(a===1)return Integer[1];if(a===-1)return n.isEven()?Integer[1]:Integer[-1];if(n.sign){return Integer[0]}if(!n.isSmall)throw new Error(\"The exponent \"+n.toString()+\" is too large.\");if(this.isSmall){if(isPrecise(value=Math.pow(a,b)))return new SmallInteger(truncate(value))}x=this;y=Integer[1];while(true){if(b&1===1){y=y.times(x);--b}if(b===0)break;b/=2;x=x.square()}return y};SmallInteger.prototype.pow=BigInteger.prototype.pow;NativeBigInt.prototype.pow=function(v){var n=parseValue(v);var a=this.value,b=n.value;var _0=BigInt(0),_1=BigInt(1),_2=BigInt(2);if(b===_0)return Integer[1];if(a===_0)return Integer[0];if(a===_1)return Integer[1];if(a===BigInt(-1))return n.isEven()?Integer[1]:Integer[-1];if(n.isNegative())return new NativeBigInt(_0);var x=this;var y=Integer[1];while(true){if((b&_1)===_1){y=y.times(x);--b}if(b===_0)break;b/=_2;x=x.square()}return y};BigInteger.prototype.modPow=function(exp,mod){exp=parseValue(exp);mod=parseValue(mod);if(mod.isZero())throw new Error(\"Cannot take modPow with modulus 0\");var r=Integer[1],base=this.mod(mod);while(exp.isPositive()){if(base.isZero())return Integer[0];if(exp.isOdd())r=r.multiply(base).mod(mod);exp=exp.divide(2);base=base.square().mod(mod)}return r};NativeBigInt.prototype.modPow=SmallInteger.prototype.modPow=BigInteger.prototype.modPow;function compareAbs(a,b){if(a.length!==b.length){return a.length>b.length?1:-1}for(var i=a.length-1;i>=0;i--){if(a[i]!==b[i])return a[i]>b[i]?1:-1}return 0}BigInteger.prototype.compareAbs=function(v){var n=parseValue(v),a=this.value,b=n.value;if(n.isSmall)return 1;return compareAbs(a,b)};SmallInteger.prototype.compareAbs=function(v){var n=parseValue(v),a=Math.abs(this.value),b=n.value;if(n.isSmall){b=Math.abs(b);return a===b?0:a>b?1:-1}return-1};NativeBigInt.prototype.compareAbs=function(v){var a=this.value;var b=parseValue(v).value;a=a>=0?a:-a;b=b>=0?b:-b;return a===b?0:a>b?1:-1};BigInteger.prototype.compare=function(v){if(v===Infinity){return-1}if(v===-Infinity){return 1}var n=parseValue(v),a=this.value,b=n.value;if(this.sign!==n.sign){return n.sign?1:-1}if(n.isSmall){return this.sign?-1:1}return compareAbs(a,b)*(this.sign?-1:1)};BigInteger.prototype.compareTo=BigInteger.prototype.compare;SmallInteger.prototype.compare=function(v){if(v===Infinity){return-1}if(v===-Infinity){return 1}var n=parseValue(v),a=this.value,b=n.value;if(n.isSmall){return a==b?0:a>b?1:-1}if(a<0!==n.sign){return a<0?-1:1}return a<0?1:-1};SmallInteger.prototype.compareTo=SmallInteger.prototype.compare;NativeBigInt.prototype.compare=function(v){if(v===Infinity){return-1}if(v===-Infinity){return 1}var a=this.value;var b=parseValue(v).value;return a===b?0:a>b?1:-1};NativeBigInt.prototype.compareTo=NativeBigInt.prototype.compare;BigInteger.prototype.equals=function(v){return this.compare(v)===0};NativeBigInt.prototype.eq=NativeBigInt.prototype.equals=SmallInteger.prototype.eq=SmallInteger.prototype.equals=BigInteger.prototype.eq=BigInteger.prototype.equals;BigInteger.prototype.notEquals=function(v){return this.compare(v)!==0};NativeBigInt.prototype.neq=NativeBigInt.prototype.notEquals=SmallInteger.prototype.neq=SmallInteger.prototype.notEquals=BigInteger.prototype.neq=BigInteger.prototype.notEquals;BigInteger.prototype.greater=function(v){return this.compare(v)>0};NativeBigInt.prototype.gt=NativeBigInt.prototype.greater=SmallInteger.prototype.gt=SmallInteger.prototype.greater=BigInteger.prototype.gt=BigInteger.prototype.greater;BigInteger.prototype.lesser=function(v){return this.compare(v)<0};NativeBigInt.prototype.lt=NativeBigInt.prototype.lesser=SmallInteger.prototype.lt=SmallInteger.prototype.lesser=BigInteger.prototype.lt=BigInteger.prototype.lesser;BigInteger.prototype.greaterOrEquals=function(v){return this.compare(v)>=0};NativeBigInt.prototype.geq=NativeBigInt.prototype.greaterOrEquals=SmallInteger.prototype.geq=SmallInteger.prototype.greaterOrEquals=BigInteger.prototype.geq=BigInteger.prototype.greaterOrEquals;BigInteger.prototype.lesserOrEquals=function(v){return this.compare(v)<=0};NativeBigInt.prototype.leq=NativeBigInt.prototype.lesserOrEquals=SmallInteger.prototype.leq=SmallInteger.prototype.lesserOrEquals=BigInteger.prototype.leq=BigInteger.prototype.lesserOrEquals;BigInteger.prototype.isEven=function(){return(this.value[0]&1)===0};SmallInteger.prototype.isEven=function(){return(this.value&1)===0};NativeBigInt.prototype.isEven=function(){return(this.value&BigInt(1))===BigInt(0)};BigInteger.prototype.isOdd=function(){return(this.value[0]&1)===1};SmallInteger.prototype.isOdd=function(){return(this.value&1)===1};NativeBigInt.prototype.isOdd=function(){return(this.value&BigInt(1))===BigInt(1)};BigInteger.prototype.isPositive=function(){return!this.sign};SmallInteger.prototype.isPositive=function(){return this.value>0};NativeBigInt.prototype.isPositive=SmallInteger.prototype.isPositive;BigInteger.prototype.isNegative=function(){return this.sign};SmallInteger.prototype.isNegative=function(){return this.value<0};NativeBigInt.prototype.isNegative=SmallInteger.prototype.isNegative;BigInteger.prototype.isUnit=function(){return false};SmallInteger.prototype.isUnit=function(){return Math.abs(this.value)===1};NativeBigInt.prototype.isUnit=function(){return this.abs().value===BigInt(1)};BigInteger.prototype.isZero=function(){return false};SmallInteger.prototype.isZero=function(){return this.value===0};NativeBigInt.prototype.isZero=function(){return this.value===BigInt(0)};BigInteger.prototype.isDivisibleBy=function(v){var n=parseValue(v);if(n.isZero())return false;if(n.isUnit())return true;if(n.compareAbs(2)===0)return this.isEven();return this.mod(n).isZero()};NativeBigInt.prototype.isDivisibleBy=SmallInteger.prototype.isDivisibleBy=BigInteger.prototype.isDivisibleBy;function isBasicPrime(v){var n=v.abs();if(n.isUnit())return false;if(n.equals(2)||n.equals(3)||n.equals(5))return true;if(n.isEven()||n.isDivisibleBy(3)||n.isDivisibleBy(5))return false;if(n.lesser(49))return true}function millerRabinTest(n,a){var nPrev=n.prev(),b=nPrev,r=0,d,t,i,x;while(b.isEven())b=b.divide(2),r++;next:for(i=0;i<a.length;i++){if(n.lesser(a[i]))continue;x=bigInt(a[i]).modPow(b,n);if(x.isUnit()||x.equals(nPrev))continue;for(d=r-1;d!=0;d--){x=x.square().mod(n);if(x.isUnit())return false;if(x.equals(nPrev))continue next}return false}return true}BigInteger.prototype.isPrime=function(strict){var isPrime=isBasicPrime(this);if(isPrime!==undefined)return isPrime;var n=this.abs();var bits=n.bitLength();if(bits<=64)return millerRabinTest(n,[2,3,5,7,11,13,17,19,23,29,31,37]);var logN=Math.log(2)*bits.toJSNumber();var t=Math.ceil(strict===true?2*Math.pow(logN,2):logN);for(var a=[],i=0;i<t;i++){a.push(bigInt(i+2))}return millerRabinTest(n,a)};NativeBigInt.prototype.isPrime=SmallInteger.prototype.isPrime=BigInteger.prototype.isPrime;BigInteger.prototype.isProbablePrime=function(iterations){var isPrime=isBasicPrime(this);if(isPrime!==undefined)return isPrime;var n=this.abs();var t=iterations===undefined?5:iterations;for(var a=[],i=0;i<t;i++){a.push(bigInt.randBetween(2,n.minus(2)))}return millerRabinTest(n,a)};NativeBigInt.prototype.isProbablePrime=SmallInteger.prototype.isProbablePrime=BigInteger.prototype.isProbablePrime;BigInteger.prototype.modInv=function(n){var t=bigInt.zero,newT=bigInt.one,r=parseValue(n),newR=this.abs(),q,lastT,lastR;while(!newR.isZero()){q=r.divide(newR);lastT=t;lastR=r;t=newT;r=newR;newT=lastT.subtract(q.multiply(newT));newR=lastR.subtract(q.multiply(newR))}if(!r.isUnit())throw new Error(this.toString()+\" and \"+n.toString()+\" are not co-prime\");if(t.compare(0)===-1){t=t.add(n)}if(this.isNegative()){return t.negate()}return t};NativeBigInt.prototype.modInv=SmallInteger.prototype.modInv=BigInteger.prototype.modInv;BigInteger.prototype.next=function(){var value=this.value;if(this.sign){return subtractSmall(value,1,this.sign)}return new BigInteger(addSmall(value,1),this.sign)};SmallInteger.prototype.next=function(){var value=this.value;if(value+1<MAX_INT)return new SmallInteger(value+1);return new BigInteger(MAX_INT_ARR,false)};NativeBigInt.prototype.next=function(){return new NativeBigInt(this.value+BigInt(1))};BigInteger.prototype.prev=function(){var value=this.value;if(this.sign){return new BigInteger(addSmall(value,1),true)}return subtractSmall(value,1,this.sign)};SmallInteger.prototype.prev=function(){var value=this.value;if(value-1>-MAX_INT)return new SmallInteger(value-1);return new BigInteger(MAX_INT_ARR,true)};NativeBigInt.prototype.prev=function(){return new NativeBigInt(this.value-BigInt(1))};var powersOfTwo=[1];while(2*powersOfTwo[powersOfTwo.length-1]<=BASE)powersOfTwo.push(2*powersOfTwo[powersOfTwo.length-1]);var powers2Length=powersOfTwo.length,highestPower2=powersOfTwo[powers2Length-1];function shift_isSmall(n){return Math.abs(n)<=BASE}BigInteger.prototype.shiftLeft=function(v){var n=parseValue(v).toJSNumber();if(!shift_isSmall(n)){throw new Error(String(n)+\" is too large for shifting.\")}if(n<0)return this.shiftRight(-n);var result=this;if(result.isZero())return result;while(n>=powers2Length){result=result.multiply(highestPower2);n-=powers2Length-1}return result.multiply(powersOfTwo[n])};NativeBigInt.prototype.shiftLeft=SmallInteger.prototype.shiftLeft=BigInteger.prototype.shiftLeft;BigInteger.prototype.shiftRight=function(v){var remQuo;var n=parseValue(v).toJSNumber();if(!shift_isSmall(n)){throw new Error(String(n)+\" is too large for shifting.\")}if(n<0)return this.shiftLeft(-n);var result=this;while(n>=powers2Length){if(result.isZero()||result.isNegative()&&result.isUnit())return result;remQuo=divModAny(result,highestPower2);result=remQuo[1].isNegative()?remQuo[0].prev():remQuo[0];n-=powers2Length-1}remQuo=divModAny(result,powersOfTwo[n]);return remQuo[1].isNegative()?remQuo[0].prev():remQuo[0]};NativeBigInt.prototype.shiftRight=SmallInteger.prototype.shiftRight=BigInteger.prototype.shiftRight;function bitwise(x,y,fn){y=parseValue(y);var xSign=x.isNegative(),ySign=y.isNegative();var xRem=xSign?x.not():x,yRem=ySign?y.not():y;var xDigit=0,yDigit=0;var xDivMod=null,yDivMod=null;var result=[];while(!xRem.isZero()||!yRem.isZero()){xDivMod=divModAny(xRem,highestPower2);xDigit=xDivMod[1].toJSNumber();if(xSign){xDigit=highestPower2-1-xDigit}yDivMod=divModAny(yRem,highestPower2);yDigit=yDivMod[1].toJSNumber();if(ySign){yDigit=highestPower2-1-yDigit}xRem=xDivMod[0];yRem=yDivMod[0];result.push(fn(xDigit,yDigit))}var sum=fn(xSign?1:0,ySign?1:0)!==0?bigInt(-1):bigInt(0);for(var i=result.length-1;i>=0;i-=1){sum=sum.multiply(highestPower2).add(bigInt(result[i]))}return sum}BigInteger.prototype.not=function(){return this.negate().prev()};NativeBigInt.prototype.not=SmallInteger.prototype.not=BigInteger.prototype.not;BigInteger.prototype.and=function(n){return bitwise(this,n,function(a,b){return a&b})};NativeBigInt.prototype.and=SmallInteger.prototype.and=BigInteger.prototype.and;BigInteger.prototype.or=function(n){return bitwise(this,n,function(a,b){return a|b})};NativeBigInt.prototype.or=SmallInteger.prototype.or=BigInteger.prototype.or;BigInteger.prototype.xor=function(n){return bitwise(this,n,function(a,b){return a^b})};NativeBigInt.prototype.xor=SmallInteger.prototype.xor=BigInteger.prototype.xor;var LOBMASK_I=1<<30,LOBMASK_BI=(BASE&-BASE)*(BASE&-BASE)|LOBMASK_I;function roughLOB(n){var v=n.value,x=typeof v===\"number\"?v|LOBMASK_I:typeof v===\"bigint\"?v|BigInt(LOBMASK_I):v[0]+v[1]*BASE|LOBMASK_BI;return x&-x}function integerLogarithm(value,base){if(base.compareTo(value)<=0){var tmp=integerLogarithm(value,base.square(base));var p=tmp.p;var e=tmp.e;var t=p.multiply(base);return t.compareTo(value)<=0?{p:t,e:e*2+1}:{p:p,e:e*2}}return{p:bigInt(1),e:0}}BigInteger.prototype.bitLength=function(){var n=this;if(n.compareTo(bigInt(0))<0){n=n.negate().subtract(bigInt(1))}if(n.compareTo(bigInt(0))===0){return bigInt(0)}return bigInt(integerLogarithm(n,bigInt(2)).e).add(bigInt(1))};NativeBigInt.prototype.bitLength=SmallInteger.prototype.bitLength=BigInteger.prototype.bitLength;function max(a,b){a=parseValue(a);b=parseValue(b);return a.greater(b)?a:b}function min(a,b){a=parseValue(a);b=parseValue(b);return a.lesser(b)?a:b}function gcd(a,b){a=parseValue(a).abs();b=parseValue(b).abs();if(a.equals(b))return a;if(a.isZero())return b;if(b.isZero())return a;var c=Integer[1],d,t;while(a.isEven()&&b.isEven()){d=min(roughLOB(a),roughLOB(b));a=a.divide(d);b=b.divide(d);c=c.multiply(d)}while(a.isEven()){a=a.divide(roughLOB(a))}do{while(b.isEven()){b=b.divide(roughLOB(b))}if(a.greater(b)){t=b;b=a;a=t}b=b.subtract(a)}while(!b.isZero());return c.isUnit()?a:a.multiply(c)}function lcm(a,b){a=parseValue(a).abs();b=parseValue(b).abs();return a.divide(gcd(a,b)).multiply(b)}function randBetween(a,b){a=parseValue(a);b=parseValue(b);var low=min(a,b),high=max(a,b);var range=high.subtract(low).add(1);if(range.isSmall)return low.add(Math.floor(Math.random()*range));var digits=toBase(range,BASE).value;var result=[],restricted=true;for(var i=0;i<digits.length;i++){var top=restricted?digits[i]:BASE;var digit=truncate(Math.random()*top);result.push(digit);if(digit<top)restricted=false}return low.add(Integer.fromArray(result,BASE,false))}var parseBase=function(text,base,alphabet,caseSensitive){alphabet=alphabet||DEFAULT_ALPHABET;text=String(text);if(!caseSensitive){text=text.toLowerCase();alphabet=alphabet.toLowerCase()}var length=text.length;var i;var absBase=Math.abs(base);var alphabetValues={};for(i=0;i<alphabet.length;i++){alphabetValues[alphabet[i]]=i}for(i=0;i<length;i++){var c=text[i];if(c===\"-\")continue;if(c in alphabetValues){if(alphabetValues[c]>=absBase){if(c===\"1\"&&absBase===1)continue;throw new Error(c+\" is not a valid digit in base \"+base+\".\")}}}base=parseValue(base);var digits=[];var isNegative=text[0]===\"-\";for(i=isNegative?1:0;i<text.length;i++){var c=text[i];if(c in alphabetValues)digits.push(parseValue(alphabetValues[c]));else if(c===\"<\"){var start=i;do{i++}while(text[i]!==\">\"&&i<text.length);digits.push(parseValue(text.slice(start+1,i)))}else throw new Error(c+\" is not a valid character\")}return parseBaseFromArray(digits,base,isNegative)};function parseBaseFromArray(digits,base,isNegative){var val=Integer[0],pow=Integer[1],i;for(i=digits.length-1;i>=0;i--){val=val.add(digits[i].times(pow));pow=pow.times(base)}return isNegative?val.negate():val}function stringify(digit,alphabet){alphabet=alphabet||DEFAULT_ALPHABET;if(digit<alphabet.length){return alphabet[digit]}return\"<\"+digit+\">\"}function toBase(n,base){base=bigInt(base);if(base.isZero()){if(n.isZero())return{value:[0],isNegative:false};throw new Error(\"Cannot convert nonzero numbers to base 0.\")}if(base.equals(-1)){if(n.isZero())return{value:[0],isNegative:false};if(n.isNegative())return{value:[].concat.apply([],Array.apply(null,Array(-n.toJSNumber())).map(Array.prototype.valueOf,[1,0])),isNegative:false};var arr=Array.apply(null,Array(n.toJSNumber()-1)).map(Array.prototype.valueOf,[0,1]);arr.unshift([1]);return{value:[].concat.apply([],arr),isNegative:false}}var neg=false;if(n.isNegative()&&base.isPositive()){neg=true;n=n.abs()}if(base.isUnit()){if(n.isZero())return{value:[0],isNegative:false};return{value:Array.apply(null,Array(n.toJSNumber())).map(Number.prototype.valueOf,1),isNegative:neg}}var out=[];var left=n,divmod;while(left.isNegative()||left.compareAbs(base)>=0){divmod=left.divmod(base);left=divmod.quotient;var digit=divmod.remainder;if(digit.isNegative()){digit=base.minus(digit).abs();left=left.next()}out.push(digit.toJSNumber())}out.push(left.toJSNumber());return{value:out.reverse(),isNegative:neg}}function toBaseString(n,base,alphabet){var arr=toBase(n,base);return(arr.isNegative?\"-\":\"\")+arr.value.map(function(x){return stringify(x,alphabet)}).join(\"\")}BigInteger.prototype.toArray=function(radix){return toBase(this,radix)};SmallInteger.prototype.toArray=function(radix){return toBase(this,radix)};NativeBigInt.prototype.toArray=function(radix){return toBase(this,radix)};BigInteger.prototype.toString=function(radix,alphabet){if(radix===undefined)radix=10;if(radix!==10)return toBaseString(this,radix,alphabet);var v=this.value,l=v.length,str=String(v[--l]),zeros=\"0000000\",digit;while(--l>=0){digit=String(v[l]);str+=zeros.slice(digit.length)+digit}var sign=this.sign?\"-\":\"\";return sign+str};SmallInteger.prototype.toString=function(radix,alphabet){if(radix===undefined)radix=10;if(radix!=10)return toBaseString(this,radix,alphabet);return String(this.value)};NativeBigInt.prototype.toString=SmallInteger.prototype.toString;NativeBigInt.prototype.toJSON=BigInteger.prototype.toJSON=SmallInteger.prototype.toJSON=function(){return this.toString()};BigInteger.prototype.valueOf=function(){return parseInt(this.toString(),10)};BigInteger.prototype.toJSNumber=BigInteger.prototype.valueOf;SmallInteger.prototype.valueOf=function(){return this.value};SmallInteger.prototype.toJSNumber=SmallInteger.prototype.valueOf;NativeBigInt.prototype.valueOf=NativeBigInt.prototype.toJSNumber=function(){return parseInt(this.toString(),10)};function parseStringValue(v){if(isPrecise(+v)){var x=+v;if(x===truncate(x))return supportsNativeBigInt?new NativeBigInt(BigInt(x)):new SmallInteger(x);throw new Error(\"Invalid integer: \"+v)}var sign=v[0]===\"-\";if(sign)v=v.slice(1);var split=v.split(/e/i);if(split.length>2)throw new Error(\"Invalid integer: \"+split.join(\"e\"));if(split.length===2){var exp=split[1];if(exp[0]===\"+\")exp=exp.slice(1);exp=+exp;if(exp!==truncate(exp)||!isPrecise(exp))throw new Error(\"Invalid integer: \"+exp+\" is not a valid exponent.\");var text=split[0];var decimalPlace=text.indexOf(\".\");if(decimalPlace>=0){exp-=text.length-decimalPlace-1;text=text.slice(0,decimalPlace)+text.slice(decimalPlace+1)}if(exp<0)throw new Error(\"Cannot include negative exponent part for integers\");text+=new Array(exp+1).join(\"0\");v=text}var isValid=/^([0-9][0-9]*)$/.test(v);if(!isValid)throw new Error(\"Invalid integer: \"+v);if(supportsNativeBigInt){return new NativeBigInt(BigInt(sign?\"-\"+v:v))}var r=[],max=v.length,l=LOG_BASE,min=max-l;while(max>0){r.push(+v.slice(min,max));min-=l;if(min<0)min=0;max-=l}trim(r);return new BigInteger(r,sign)}function parseNumberValue(v){if(supportsNativeBigInt){return new NativeBigInt(BigInt(v))}if(isPrecise(v)){if(v!==truncate(v))throw new Error(v+\" is not an integer.\");return new SmallInteger(v)}return parseStringValue(v.toString())}function parseValue(v){if(typeof v===\"number\"){return parseNumberValue(v)}if(typeof v===\"string\"){return parseStringValue(v)}if(typeof v===\"bigint\"){return new NativeBigInt(v)}return v}for(var i=0;i<1e3;i++){Integer[i]=parseValue(i);if(i>0)Integer[-i]=parseValue(-i)}Integer.one=Integer[1];Integer.zero=Integer[0];Integer.minusOne=Integer[-1];Integer.max=max;Integer.min=min;Integer.gcd=gcd;Integer.lcm=lcm;Integer.isInstance=function(x){return x instanceof BigInteger||x instanceof SmallInteger||x instanceof NativeBigInt};Integer.randBetween=randBetween;Integer.fromArray=function(digits,base,isNegative){return parseBaseFromArray(digits.map(parseValue),parseValue(base||10),isNegative)};return Integer}();if(typeof module!==\"undefined\"&&module.hasOwnProperty(\"exports\")){module.exports=bigInt}if(typeof define===\"function\"&&define.amd){define(\"big-integer\",[],function(){return bigInt})}","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @class\n * @ignore\n */\nclass DataChunk {\n    //Represents a data structure that keep all the necessary info about a single init/media segment\n    constructor() {\n        this.streamId = null;\n        this.mediaInfo = null;\n        this.segmentType = null;\n        this.quality = NaN;\n        this.index = NaN;\n        this.bytes = null;\n        this.start = NaN;\n        this.end = NaN;\n        this.duration = NaN;\n        this.representationId = null;\n        this.endFragment = null;\n    }\n}\n\nexport default DataChunk;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass DashJSError {\n    constructor(code, message, data) {\n        this.code = code || null;\n        this.message = message || null;\n        this.data = data || null;\n    }\n}\n\nexport default DashJSError;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FragmentRequest from '../streaming/vo/FragmentRequest';\nimport {HTTPRequest} from '../streaming/vo/metrics/HTTPRequest';\n\nfunction MssFragmentInfoController(config) {\n\n    config = config || {};\n\n    let instance,\n        logger,\n        fragmentModel,\n        started,\n        type,\n        loadFragmentTimeout,\n        startTime,\n        startFragmentTime,\n        index;\n\n    const streamProcessor = config.streamProcessor;\n    const baseURLController = config.baseURLController;\n    const debug = config.debug;\n    const controllerType = 'MssFragmentInfoController';\n\n    function setup() {\n        logger = debug.getLogger(instance);\n    }\n\n    function initialize() {\n        type = streamProcessor.getType();\n        fragmentModel = streamProcessor.getFragmentModel();\n\n        started = false;\n        startTime = null;\n        startFragmentTime = null;\n    }\n\n    function start() {\n        if (started) return;\n\n        logger.debug('Start');\n\n        started = true;\n        index = 0;\n\n        loadNextFragmentInfo();\n    }\n\n    function stop() {\n        if (!started) return;\n\n        logger.debug('Stop');\n\n        clearTimeout(loadFragmentTimeout);\n        started = false;\n        startTime = null;\n        startFragmentTime = null;\n    }\n\n    function reset() {\n        stop();\n    }\n\n    function loadNextFragmentInfo() {\n        if (!started) return;\n\n        // Get last segment from SegmentTimeline\n        const representation = getCurrentRepresentation();\n        const manifest = representation.adaptation.period.mpd.manifest;\n        const adaptation = manifest.Period_asArray[representation.adaptation.period.index].AdaptationSet_asArray[representation.adaptation.index];\n        const segments = adaptation.SegmentTemplate.SegmentTimeline.S_asArray;\n        const segment = segments[segments.length - 1];\n\n        // logger.debug('Last fragment time: ' + (segment.t / adaptation.SegmentTemplate.timescale));\n\n        // Generate segment request\n        const request = getRequestForSegment(adaptation, representation, segment);\n\n        // Send segment request\n        requestFragment.call(this, request);\n    }\n\n    function getRequestForSegment(adaptation, representation, segment) {\n        let timescale = adaptation.SegmentTemplate.timescale;\n        let request = new FragmentRequest();\n\n        request.mediaType = type;\n        request.type = HTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE;\n        // request.range = segment.mediaRange;\n        request.startTime = segment.t / timescale;\n        request.duration = segment.d / timescale;\n        request.timescale = timescale;\n        // request.availabilityStartTime = segment.availabilityStartTime;\n        // request.availabilityEndTime = segment.availabilityEndTime;\n        // request.wallStartTime = segment.wallStartTime;\n        request.quality = representation.index;\n        request.index = index++;\n        request.mediaInfo = streamProcessor.getMediaInfo();\n        request.adaptationIndex = representation.adaptation.index;\n        request.representationId = representation.id;\n        request.url = baseURLController.resolve(representation.path).url + adaptation.SegmentTemplate.media;\n        request.url = request.url.replace('$Bandwidth$', representation.bandwidth);\n        request.url = request.url.replace('$Time$', segment.tManifest ? segment.tManifest : segment.t);\n        request.url = request.url.replace('/Fragments(', '/FragmentInfo(');\n\n        return request;\n    }\n\n    function getCurrentRepresentation() {\n        const representationController = streamProcessor.getRepresentationController();\n        const representation = representationController.getCurrentRepresentation();\n        return representation;\n    }\n\n    function requestFragment(request) {\n        // logger.debug('Load FragmentInfo for time: ' + request.startTime);\n        if (streamProcessor.getFragmentModel().isFragmentLoadedOrPending(request)) {\n            // We may have reached end of timeline in case of start-over streams\n            logger.debug('End of timeline');\n            stop();\n            return;\n        }\n\n        fragmentModel.executeRequest(request);\n    }\n\n    function fragmentInfoLoaded (e) {\n        if (!started) return;\n\n        const request = e.request;\n        if (!e.response) {\n            logger.error('Load error', request.url);\n            return;\n        }\n\n        let deltaFragmentTime,\n            deltaTime,\n            delay;\n\n        // logger.debug('FragmentInfo loaded: ', request.url);\n\n        if (startTime === null) {\n            startTime = new Date().getTime();\n        }\n\n        if (!startFragmentTime) {\n            startFragmentTime = request.startTime;\n        }\n\n        // Determine delay before requesting next FragmentInfo\n        deltaTime = (new Date().getTime() - startTime) / 1000;\n        deltaFragmentTime = (request.startTime + request.duration) - startFragmentTime;\n        delay = Math.max(0, (deltaFragmentTime - deltaTime));\n\n        // Set timeout for requesting next FragmentInfo\n        clearTimeout(loadFragmentTimeout);\n        loadFragmentTimeout = setTimeout(function () {\n            loadFragmentTimeout = null;\n            loadNextFragmentInfo();\n        }, delay * 1000);\n    }\n\n    function getType() {\n        return type;\n    }\n\n    instance = {\n        initialize: initialize,\n        controllerType: controllerType,\n        start: start,\n        fragmentInfoLoaded: fragmentInfoLoaded,\n        getType: getType,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nMssFragmentInfoController.__dashjs_factory_name = 'MssFragmentInfoController';\nexport default dashjs.FactoryMaker.getClassFactory(MssFragmentInfoController); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport ErrorsBase from '../../core/errors/ErrorsBase';\n/**\n * @class\n *\n */\nclass MssErrors extends ErrorsBase {\n\tconstructor () {\n        super();\n        /**\n         * Error code returned when no tfrf box is detected in MSS live stream\n         */\n        this.MSS_NO_TFRF_CODE = 200;\n\n        /**\n         * Error code returned when one of the codecs defined in the manifest is not supported\n         */\n        this.MSS_UNSUPPORTED_CODEC_CODE = 201;\n\n        this.MSS_NO_TFRF_MESSAGE = 'Missing tfrf in live media segment';\n        this.MSS_UNSUPPORTED_CODEC_MESSAGE = 'Unsupported codec';\n    }\n}\n\nlet mssErrors = new MssErrors();\nexport default mssErrors;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport DashJSError from '../streaming/vo/DashJSError';\nimport MssErrors from './errors/MssErrors';\n\nimport Events from '../streaming/MediaPlayerEvents';\n\n/**\n * @module MssFragmentMoofProcessor\n * @ignore\n * @param {Object} config object\n */\nfunction MssFragmentMoofProcessor(config) {\n\n    config = config || {};\n    let instance,\n        type,\n        logger;\n    const dashMetrics = config.dashMetrics;\n    const playbackController = config.playbackController;\n    const errorHandler = config.errHandler;\n    const eventBus = config.eventBus;\n    const ISOBoxer = config.ISOBoxer;\n    const debug = config.debug;\n\n    function setup() {\n        logger = debug.getLogger(instance);\n        type = '';\n    }\n\n    function processTfrf(request, tfrf, tfdt, streamProcessor) {\n        const representationController = streamProcessor.getRepresentationController();\n        const representation = representationController.getCurrentRepresentation();\n\n        const manifest = representation.adaptation.period.mpd.manifest;\n        const adaptation = manifest.Period_asArray[representation.adaptation.period.index].AdaptationSet_asArray[representation.adaptation.index];\n        const timescale = adaptation.SegmentTemplate.timescale;\n\n        type = streamProcessor.getType();\n\n        // Process tfrf only for live streams or start-over static streams (timeShiftBufferDepth > 0)\n        if (manifest.type !== 'dynamic' && !manifest.timeShiftBufferDepth) {\n            return;\n        }\n\n        if (!tfrf) {\n            errorHandler.error(new DashJSError(MssErrors.MSS_NO_TFRF_CODE, MssErrors.MSS_NO_TFRF_MESSAGE));\n            return;\n        }\n\n        // Get adaptation's segment timeline (always a SegmentTimeline in Smooth Streaming use case)\n        const segments = adaptation.SegmentTemplate.SegmentTimeline.S;\n        const entries = tfrf.entry;\n        let entry,\n            segmentTime,\n            range;\n        let segment = null;\n        let t = 0;\n        let endTime;\n        let availabilityStartTime = null;\n\n        if (entries.length === 0) {\n            return;\n        }\n\n        // Consider only first tfrf entry (to avoid pre-condition failure on fragment info requests)\n        entry = entries[0];\n\n        // In case of start-over streams, check if we have reached end of original manifest duration (set in timeShiftBufferDepth)\n        // => then do not update anymore timeline\n        if (manifest.type === 'static') {\n            // Get first segment time\n            segmentTime = segments[0].tManifest ? parseFloat(segments[0].tManifest) : segments[0].t;\n            if (entry.fragment_absolute_time > (segmentTime + (manifest.timeShiftBufferDepth * timescale))) {\n                return;\n            }\n        }\n\n        // logger.debug('entry - t = ', (entry.fragment_absolute_time / timescale));\n\n        // Get last segment time\n        segmentTime = segments[segments.length - 1].tManifest ? parseFloat(segments[segments.length - 1].tManifest) : segments[segments.length - 1].t;\n        // logger.debug('Last segment - t = ', (segmentTime / timescale));\n\n        // Check if we have to append new segment to timeline\n        if (entry.fragment_absolute_time <= segmentTime) {\n            // Update DVR window range => set range end to end time of current segment\n            range = {\n                start: segments[0].t / timescale,\n                end: (tfdt.baseMediaDecodeTime / timescale) + request.duration\n            };\n\n            updateDVR(request.mediaType, range, streamProcessor.getStreamInfo().manifestInfo);\n            return;\n        }\n\n        // logger.debug('Add new segment - t = ', (entry.fragment_absolute_time / timescale));\n        segment = {};\n        segment.t = entry.fragment_absolute_time;\n        segment.d = entry.fragment_duration;\n        // If timestamps starts at 0 relative to 1st segment (dynamic to static) then update segment time\n        if (segments[0].tManifest) {\n            segment.t -= parseFloat(segments[0].tManifest) - segments[0].t;\n            segment.tManifest = entry.fragment_absolute_time;\n        }\n\n        // Patch previous segment duration\n        let lastSegment = segments[segments.length - 1];\n        if (lastSegment.t + lastSegment.d !== segment.t) {\n            logger.debug('Patch segment duration - t = ', lastSegment.t + ', d = ' + lastSegment.d + ' => ' + (segment.t - lastSegment.t));\n            lastSegment.d = segment.t - lastSegment.t;\n        }\n\n        segments.push(segment);\n\n        // In case of static start-over streams, update content duration\n        if (manifest.type === 'static') {\n            if (type === 'video') {\n                segment = segments[segments.length - 1];\n                endTime = (segment.t + segment.d) / timescale;\n                if (endTime > representation.adaptation.period.duration) {\n                    eventBus.trigger(Events.MANIFEST_VALIDITY_CHANGED, { sender: this, newDuration: endTime });\n                }\n            }\n            return;\n        }\n        else {\n            // In case of live streams, update segment timeline according to DVR window\n            if (manifest.timeShiftBufferDepth && manifest.timeShiftBufferDepth > 0) {\n                // Get timestamp of the last segment\n                segment = segments[segments.length - 1];\n                t = segment.t;\n\n                // Determine the segments' availability start time\n                availabilityStartTime = (t - (manifest.timeShiftBufferDepth * timescale)) / timescale;\n\n                // Remove segments prior to availability start time\n                segment = segments[0];\n                endTime = (segment.t + segment.d) / timescale;\n                while (endTime < availabilityStartTime) {\n                    // Check if not currently playing the segment to be removed\n                    if (!playbackController.isPaused() && playbackController.getTime() < endTime) {\n                        break;\n                    }\n                    // logger.debug('Remove segment  - t = ' + (segment.t / timescale));\n                    segments.splice(0, 1);\n                    segment = segments[0];\n                    endTime =  (segment.t + segment.d) / timescale;\n                }\n            }\n\n            // Update DVR window range => set range end to end time of current segment\n            range = {\n                start: segments[0].t / timescale,\n                end: (tfdt.baseMediaDecodeTime / timescale) + request.duration\n            };\n\n            updateDVR(type, range, streamProcessor.getStreamInfo().manifestInfo);\n        }\n\n    }\n\n    function updateDVR(type, range, manifestInfo) {\n        if (type !== 'video' && type !== 'audio') return;\n        const dvrInfos = dashMetrics.getCurrentDVRInfo(type);\n        if (!dvrInfos || (range.end > dvrInfos.range.end)) {\n            logger.debug('Update DVR range: [' + range.start + ' - ' + range.end + ']');\n            dashMetrics.addDVRInfo(type, playbackController.getTime(), manifestInfo, range);\n            playbackController.updateCurrentTime(type);\n        }\n    }\n\n    // This function returns the offset of the 1st byte of a child box within a container box\n    function getBoxOffset(parent, type) {\n        let offset = 8;\n        let i = 0;\n\n        for (i = 0; i < parent.boxes.length; i++) {\n            if (parent.boxes[i].type === type) {\n                return offset;\n            }\n            offset += parent.boxes[i].size;\n        }\n        return offset;\n    }\n\n    function convertFragment(e, streamProcessor) {\n        let i;\n\n        // e.request contains request description object\n        // e.response contains fragment bytes\n        const isoFile = ISOBoxer.parseBuffer(e.response);\n        // Update track_Id in tfhd box\n        const tfhd = isoFile.fetch('tfhd');\n        tfhd.track_ID = e.request.mediaInfo.index + 1;\n\n        // Add tfdt box\n        let tfdt = isoFile.fetch('tfdt');\n        const traf = isoFile.fetch('traf');\n        if (tfdt === null) {\n            tfdt = ISOBoxer.createFullBox('tfdt', traf, tfhd);\n            tfdt.version = 1;\n            tfdt.flags = 0;\n            tfdt.baseMediaDecodeTime = Math.floor(e.request.startTime * e.request.timescale);\n        }\n\n        const trun = isoFile.fetch('trun');\n\n        // Process tfxd boxes\n        // This box provide absolute timestamp but we take the segment start time for tfdt\n        let tfxd = isoFile.fetch('tfxd');\n        if (tfxd) {\n            tfxd._parent.boxes.splice(tfxd._parent.boxes.indexOf(tfxd), 1);\n            tfxd = null;\n        }\n        let tfrf = isoFile.fetch('tfrf');\n        processTfrf(e.request, tfrf, tfdt, streamProcessor);\n        if (tfrf) {\n            tfrf._parent.boxes.splice(tfrf._parent.boxes.indexOf(tfrf), 1);\n            tfrf = null;\n        }\n\n        // If protected content in PIFF1.1 format (sepiff box = Sample Encryption PIFF)\n        // => convert sepiff box it into a senc box\n        // => create saio and saiz boxes (if not already present)\n        const sepiff = isoFile.fetch('sepiff');\n        if (sepiff !== null) {\n            sepiff.type = 'senc';\n            sepiff.usertype = undefined;\n\n            let saio = isoFile.fetch('saio');\n            if (saio === null) {\n                // Create Sample Auxiliary Information Offsets Box box (saio)\n                saio = ISOBoxer.createFullBox('saio', traf);\n                saio.version = 0;\n                saio.flags = 0;\n                saio.entry_count = 1;\n                saio.offset = [0];\n\n                const saiz = ISOBoxer.createFullBox('saiz', traf);\n                saiz.version = 0;\n                saiz.flags = 0;\n                saiz.sample_count = sepiff.sample_count;\n                saiz.default_sample_info_size = 0;\n                saiz.sample_info_size = [];\n\n                if (sepiff.flags & 0x02) {\n                    // Sub-sample encryption => set sample_info_size for each sample\n                    for (i = 0; i < sepiff.sample_count; i += 1) {\n                        // 10 = 8 (InitializationVector field size) + 2 (subsample_count field size)\n                        // 6 = 2 (BytesOfClearData field size) + 4 (BytesOfEncryptedData field size)\n                        saiz.sample_info_size[i] = 10 + (6 * sepiff.entry[i].NumberOfEntries);\n                    }\n                } else {\n                    // No sub-sample encryption => set default sample_info_size = InitializationVector field size (8)\n                    saiz.default_sample_info_size = 8;\n                }\n            }\n        }\n\n        tfhd.flags &= 0xFFFFFE; // set tfhd.base-data-offset-present to false\n        tfhd.flags |= 0x020000; // set tfhd.default-base-is-moof to true\n        trun.flags |= 0x000001; // set trun.data-offset-present to true\n\n        // Update trun.data_offset field that corresponds to first data byte (inside mdat box)\n        const moof = isoFile.fetch('moof');\n        let length = moof.getLength();\n        trun.data_offset = length + 8;\n\n        // Update saio box offset field according to new senc box offset\n        let saio = isoFile.fetch('saio');\n        if (saio !== null) {\n            let trafPosInMoof = getBoxOffset(moof, 'traf');\n            let sencPosInTraf = getBoxOffset(traf, 'senc');\n            // Set offset from begin fragment to the first IV field in senc box\n            saio.offset[0] = trafPosInMoof + sencPosInTraf + 16; // 16 = box header (12) + sample_count field size (4)\n        }\n\n        // Write transformed/processed fragment into request reponse data\n        e.response = isoFile.write();\n    }\n\n    function updateSegmentList(e, streamProcessor) {\n        // e.request contains request description object\n        // e.response contains fragment bytes\n        if (!e.response) {\n            throw new Error('e.response parameter is missing');\n        }\n\n        const isoFile = ISOBoxer.parseBuffer(e.response);\n        // Update track_Id in tfhd box\n        const tfhd = isoFile.fetch('tfhd');\n        tfhd.track_ID = e.request.mediaInfo.index + 1;\n\n        // Add tfdt box\n        let tfdt = isoFile.fetch('tfdt');\n        let traf = isoFile.fetch('traf');\n        if (tfdt === null) {\n            tfdt = ISOBoxer.createFullBox('tfdt', traf, tfhd);\n            tfdt.version = 1;\n            tfdt.flags = 0;\n            tfdt.baseMediaDecodeTime = Math.floor(e.request.startTime * e.request.timescale);\n        }\n\n        let tfrf = isoFile.fetch('tfrf');\n        processTfrf(e.request, tfrf, tfdt, streamProcessor);\n        if (tfrf) {\n            tfrf._parent.boxes.splice(tfrf._parent.boxes.indexOf(tfrf), 1);\n            tfrf = null;\n        }\n    }\n\n    function getType() {\n        return type;\n    }\n\n    instance = {\n        convertFragment: convertFragment,\n        updateSegmentList: updateSegmentList,\n        getType: getType\n    };\n\n    setup();\n    return instance;\n}\n\nMssFragmentMoofProcessor.__dashjs_factory_name = 'MssFragmentMoofProcessor';\nexport default dashjs.FactoryMaker.getClassFactory(MssFragmentMoofProcessor); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n import MssErrors from './errors/MssErrors';\n\n/**\n * @module MssFragmentMoovProcessor\n * @ignore\n * @param {Object} config object\n */\nfunction MssFragmentMoovProcessor(config) {\n    config = config || {};\n    const NALUTYPE_SPS = 7;\n    const NALUTYPE_PPS = 8;\n    const constants = config.constants;\n    const ISOBoxer = config.ISOBoxer;\n\n    let protectionController = config.protectionController;\n    let instance,\n        period,\n        adaptationSet,\n        representation,\n        contentProtection,\n        timescale,\n        trackId;\n\n    function createFtypBox(isoFile) {\n        let ftyp = ISOBoxer.createBox('ftyp', isoFile);\n        ftyp.major_brand = 'iso6';\n        ftyp.minor_version = 1; // is an informative integer for the minor version of the major brand\n        ftyp.compatible_brands = []; //is a list, to the end of the box, of brands isom, iso6 and msdh\n        ftyp.compatible_brands[0] = 'isom'; // => decimal ASCII value for isom\n        ftyp.compatible_brands[1] = 'iso6'; // => decimal ASCII value for iso6\n        ftyp.compatible_brands[2] = 'msdh'; // => decimal ASCII value for msdh\n\n        return ftyp;\n    }\n\n    function createMoovBox(isoFile) {\n\n        // moov box\n        let moov = ISOBoxer.createBox('moov', isoFile);\n\n        // moov/mvhd\n        createMvhdBox(moov);\n\n        // moov/trak\n        let trak = ISOBoxer.createBox('trak', moov);\n\n        // moov/trak/tkhd\n        createTkhdBox(trak);\n\n        // moov/trak/mdia\n        let mdia = ISOBoxer.createBox('mdia', trak);\n\n        // moov/trak/mdia/mdhd\n        createMdhdBox(mdia);\n\n        // moov/trak/mdia/hdlr\n        createHdlrBox(mdia);\n\n        // moov/trak/mdia/minf\n        let minf = ISOBoxer.createBox('minf', mdia);\n\n        switch (adaptationSet.type) {\n            case constants.VIDEO:\n                // moov/trak/mdia/minf/vmhd\n                createVmhdBox(minf);\n                break;\n            case constants.AUDIO:\n                // moov/trak/mdia/minf/smhd\n                createSmhdBox(minf);\n                break;\n            default:\n                break;\n        }\n\n        // moov/trak/mdia/minf/dinf\n        let dinf = ISOBoxer.createBox('dinf', minf);\n\n        // moov/trak/mdia/minf/dinf/dref\n        createDrefBox(dinf);\n\n        // moov/trak/mdia/minf/stbl\n        let stbl = ISOBoxer.createBox('stbl', minf);\n\n        // Create empty stts, stsc, stco and stsz boxes\n        // Use data field as for codem-isoboxer unknown boxes for setting fields value\n\n        // moov/trak/mdia/minf/stbl/stts\n        let stts = ISOBoxer.createFullBox('stts', stbl);\n        stts._data = [0, 0, 0, 0, 0, 0, 0, 0]; // version = 0, flags = 0, entry_count = 0\n\n        // moov/trak/mdia/minf/stbl/stsc\n        let stsc = ISOBoxer.createFullBox('stsc', stbl);\n        stsc._data = [0, 0, 0, 0, 0, 0, 0, 0]; // version = 0, flags = 0, entry_count = 0\n\n        // moov/trak/mdia/minf/stbl/stco\n        let stco = ISOBoxer.createFullBox('stco', stbl);\n        stco._data = [0, 0, 0, 0, 0, 0, 0, 0]; // version = 0, flags = 0, entry_count = 0\n\n        // moov/trak/mdia/minf/stbl/stsz\n        let stsz = ISOBoxer.createFullBox('stsz', stbl);\n        stsz._data = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]; // version = 0, flags = 0, sample_size = 0, sample_count = 0\n\n        // moov/trak/mdia/minf/stbl/stsd\n        createStsdBox(stbl);\n\n        // moov/mvex\n        let mvex = ISOBoxer.createBox('mvex', moov);\n\n        // moov/mvex/trex\n        createTrexBox(mvex);\n\n        if (contentProtection && protectionController) {\n            let supportedKS = protectionController.getSupportedKeySystemsFromContentProtection(contentProtection);\n            createProtectionSystemSpecificHeaderBox(moov, supportedKS);\n        }\n    }\n\n    function createMvhdBox(moov) {\n\n        let mvhd = ISOBoxer.createFullBox('mvhd', moov);\n\n        mvhd.version = 1; // version = 1  in order to have 64bits duration value\n\n        mvhd.creation_time = 0; // the creation time of the presentation => ignore (set to 0)\n        mvhd.modification_time = 0; // the most recent time the presentation was modified => ignore (set to 0)\n        mvhd.timescale = timescale; // the time-scale for the entire presentation => 10000000 for MSS\n        mvhd.duration = period.duration === Infinity ? 0xFFFFFFFFFFFFFFFF : Math.round(period.duration * timescale); // the length of the presentation (in the indicated timescale) =>  take duration of period\n        mvhd.rate = 1.0; // 16.16 number, '1.0' = normal playback\n        mvhd.volume = 1.0; // 8.8 number, '1.0' = full volume\n        mvhd.reserved1 = 0;\n        mvhd.reserved2 = [0x0, 0x0];\n        mvhd.matrix = [\n            1, 0, 0, // provides a transformation matrix for the video;\n            0, 1, 0, // (u,v,w) are restricted here to (0,0,1)\n            0, 0, 16384\n        ];\n        mvhd.pre_defined = [0, 0, 0, 0, 0, 0];\n        mvhd.next_track_ID = trackId + 1; // indicates a value to use for the track ID of the next track to be added to this presentation\n\n        return mvhd;\n    }\n\n    function createTkhdBox(trak) {\n\n        let tkhd = ISOBoxer.createFullBox('tkhd', trak);\n\n        tkhd.version = 1; // version = 1  in order to have 64bits duration value\n        tkhd.flags = 0x1 | // Track_enabled (0x000001): Indicates that the track is enabled\n            0x2 | // Track_in_movie (0x000002):  Indicates that the track is used in the presentation\n            0x4; // Track_in_preview (0x000004):  Indicates that the track is used when previewing the presentation\n\n        tkhd.creation_time = 0; // the creation time of the presentation => ignore (set to 0)\n        tkhd.modification_time = 0; // the most recent time the presentation was modified => ignore (set to 0)\n        tkhd.track_ID = trackId; // uniquely identifies this track over the entire life-time of this presentation\n        tkhd.reserved1 = 0;\n        tkhd.duration = period.duration === Infinity ? 0xFFFFFFFFFFFFFFFF : Math.round(period.duration * timescale); // the duration of this track (in the timescale indicated in the Movie Header Box) =>  take duration of period\n        tkhd.reserved2 = [0x0, 0x0];\n        tkhd.layer = 0; // specifies the front-to-back ordering of video tracks; tracks with lower numbers are closer to the viewer => 0 since only one video track\n        tkhd.alternate_group = 0; // specifies a group or collection of tracks => ignore\n        tkhd.volume = 1.0; // '1.0' = full volume\n        tkhd.reserved3 = 0;\n        tkhd.matrix = [\n            1, 0, 0, // provides a transformation matrix for the video;\n            0, 1, 0, // (u,v,w) are restricted here to (0,0,1)\n            0, 0, 16384\n        ];\n        tkhd.width = representation.width; // visual presentation width\n        tkhd.height = representation.height; // visual presentation height\n\n        return tkhd;\n    }\n\n    function createMdhdBox(mdia) {\n\n        let mdhd = ISOBoxer.createFullBox('mdhd', mdia);\n\n        mdhd.version = 1; // version = 1  in order to have 64bits duration value\n\n        mdhd.creation_time = 0; // the creation time of the presentation => ignore (set to 0)\n        mdhd.modification_time = 0; // the most recent time the presentation was modified => ignore (set to 0)\n        mdhd.timescale = timescale; // the time-scale for the entire presentation\n        mdhd.duration = period.duration === Infinity ? 0xFFFFFFFFFFFFFFFF : Math.round(period.duration * timescale); // the duration of this media (in the scale of the timescale). If the duration cannot be determined then duration is set to all 1s.\n        mdhd.language = adaptationSet.lang || 'und'; // declares the language code for this media\n        mdhd.pre_defined = 0;\n\n        return mdhd;\n    }\n\n    function createHdlrBox(mdia) {\n\n        let hdlr = ISOBoxer.createFullBox('hdlr', mdia);\n\n        hdlr.pre_defined = 0;\n        switch (adaptationSet.type) {\n            case constants.VIDEO:\n                hdlr.handler_type = 'vide';\n                break;\n            case constants.AUDIO:\n                hdlr.handler_type = 'soun';\n                break;\n            default:\n                hdlr.handler_type = 'meta';\n                break;\n        }\n        hdlr.name = representation.id;\n        hdlr.reserved = [0, 0, 0];\n\n        return hdlr;\n    }\n\n    function createVmhdBox(minf) {\n\n        let vmhd = ISOBoxer.createFullBox('vmhd', minf);\n\n        vmhd.flags = 1;\n\n        vmhd.graphicsmode = 0; // specifies a composition mode for this video track, from the following enumerated set, which may be extended by derived specifications: copy = 0 copy over the existing image\n        vmhd.opcolor = [0, 0, 0]; // is a set of 3 colour values (red, green, blue) available for use by graphics modes\n\n        return vmhd;\n    }\n\n    function createSmhdBox(minf) {\n\n        let smhd = ISOBoxer.createFullBox('smhd', minf);\n\n        smhd.flags = 1;\n\n        smhd.balance = 0; // is a fixed-point 8.8 number that places mono audio tracks in a stereo space; 0 is centre (the normal value); full left is -1.0 and full right is 1.0.\n        smhd.reserved = 0;\n\n        return smhd;\n    }\n\n    function createDrefBox(dinf) {\n\n        let dref = ISOBoxer.createFullBox('dref', dinf);\n\n        dref.entry_count = 1;\n        dref.entries = [];\n\n        let url = ISOBoxer.createFullBox('url ', dref, false);\n        url.location = '';\n        url.flags = 1;\n\n        dref.entries.push(url);\n\n        return dref;\n    }\n\n    function createStsdBox(stbl) {\n\n        let stsd = ISOBoxer.createFullBox('stsd', stbl);\n\n        stsd.entries = [];\n        switch (adaptationSet.type) {\n            case constants.VIDEO:\n            case constants.AUDIO:\n                stsd.entries.push(createSampleEntry(stsd));\n                break;\n            default:\n                break;\n        }\n\n        stsd.entry_count = stsd.entries.length; // is an integer that counts the actual entries\n        return stsd;\n    }\n\n    function createSampleEntry(stsd) {\n        let codec = representation.codecs.substring(0, representation.codecs.indexOf('.'));\n\n        switch (codec) {\n            case 'avc1':\n                return createAVCVisualSampleEntry(stsd, codec);\n            case 'mp4a':\n                return createMP4AudioSampleEntry(stsd, codec);\n            default:\n                throw {\n                    code: MssErrors.MSS_UNSUPPORTED_CODEC_CODE,\n                    message: MssErrors.MSS_UNSUPPORTED_CODEC_MESSAGE,\n                    data: {\n                        codec: codec\n                    }\n                };\n        }\n    }\n\n    function createAVCVisualSampleEntry(stsd, codec) {\n        let avc1;\n\n        if (contentProtection) {\n            avc1 = ISOBoxer.createBox('encv', stsd, false);\n        } else {\n            avc1 = ISOBoxer.createBox('avc1', stsd, false);\n        }\n\n        // SampleEntry fields\n        avc1.reserved1 = [0x0, 0x0, 0x0, 0x0, 0x0, 0x0];\n        avc1.data_reference_index = 1;\n\n        // VisualSampleEntry fields\n        avc1.pre_defined1 = 0;\n        avc1.reserved2 = 0;\n        avc1.pre_defined2 = [0, 0, 0];\n        avc1.height = representation.height;\n        avc1.width = representation.width;\n        avc1.horizresolution = 72; // 72 dpi\n        avc1.vertresolution = 72; // 72 dpi\n        avc1.reserved3 = 0;\n        avc1.frame_count = 1; // 1 compressed video frame per sample\n        avc1.compressorname = [\n            0x0A, 0x41, 0x56, 0x43, 0x20, 0x43, 0x6F, 0x64, // = 'AVC Coding';\n            0x69, 0x6E, 0x67, 0x00, 0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00\n        ];\n        avc1.depth = 0x0018; // 0x0018 – images are in colour with no alpha.\n        avc1.pre_defined3 = 65535;\n        avc1.config = createAVC1ConfigurationRecord();\n        if (contentProtection) {\n            // Create and add Protection Scheme Info Box\n            let sinf = ISOBoxer.createBox('sinf', avc1);\n\n            // Create and add Original Format Box => indicate codec type of the encrypted content\n            createOriginalFormatBox(sinf, codec);\n\n            // Create and add Scheme Type box\n            createSchemeTypeBox(sinf);\n\n            // Create and add Scheme Information Box\n            createSchemeInformationBox(sinf);\n        }\n\n        return avc1;\n    }\n\n    function createAVC1ConfigurationRecord() {\n\n        let avcC = null;\n        let avcCLength = 15; // length = 15 by default (0 SPS and 0 PPS)\n\n        // First get all SPS and PPS from codecPrivateData\n        let sps = [];\n        let pps = [];\n        let AVCProfileIndication = 0;\n        let AVCLevelIndication = 0;\n        let profile_compatibility = 0;\n\n        let nalus = representation.codecPrivateData.split('00000001').slice(1);\n        let naluBytes, naluType;\n\n        for (let i = 0; i < nalus.length; i++) {\n            naluBytes = hexStringtoBuffer(nalus[i]);\n\n            naluType = naluBytes[0] & 0x1F;\n\n            switch (naluType) {\n                case NALUTYPE_SPS:\n                    sps.push(naluBytes);\n                    avcCLength += naluBytes.length + 2; // 2 = sequenceParameterSetLength field length\n                    break;\n                case NALUTYPE_PPS:\n                    pps.push(naluBytes);\n                    avcCLength += naluBytes.length + 2; // 2 = pictureParameterSetLength field length\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        // Get profile and level from SPS\n        if (sps.length > 0) {\n            AVCProfileIndication = sps[0][1];\n            profile_compatibility = sps[0][2];\n            AVCLevelIndication = sps[0][3];\n        }\n\n        // Generate avcC buffer\n        avcC = new Uint8Array(avcCLength);\n\n        let i = 0;\n        // length\n        avcC[i++] = (avcCLength & 0xFF000000) >> 24;\n        avcC[i++] = (avcCLength & 0x00FF0000) >> 16;\n        avcC[i++] = (avcCLength & 0x0000FF00) >> 8;\n        avcC[i++] = (avcCLength & 0x000000FF);\n        avcC.set([0x61, 0x76, 0x63, 0x43], i); // type = 'avcC'\n        i += 4;\n        avcC[i++] = 1; // configurationVersion = 1\n        avcC[i++] = AVCProfileIndication;\n        avcC[i++] = profile_compatibility;\n        avcC[i++] = AVCLevelIndication;\n        avcC[i++] = 0xFF; // '11111' + lengthSizeMinusOne = 3\n        avcC[i++] = 0xE0 | sps.length; // '111' + numOfSequenceParameterSets\n        for (let n = 0; n < sps.length; n++) {\n            avcC[i++] = (sps[n].length & 0xFF00) >> 8;\n            avcC[i++] = (sps[n].length & 0x00FF);\n            avcC.set(sps[n], i);\n            i += sps[n].length;\n        }\n        avcC[i++] = pps.length; // numOfPictureParameterSets\n        for (let n = 0; n < pps.length; n++) {\n            avcC[i++] = (pps[n].length & 0xFF00) >> 8;\n            avcC[i++] = (pps[n].length & 0x00FF);\n            avcC.set(pps[n], i);\n            i += pps[n].length;\n        }\n\n        return avcC;\n    }\n\n    function createMP4AudioSampleEntry(stsd, codec) {\n        let mp4a;\n\n        if (contentProtection) {\n            mp4a = ISOBoxer.createBox('enca', stsd, false);\n        } else {\n            mp4a = ISOBoxer.createBox('mp4a', stsd, false);\n        }\n\n        // SampleEntry fields\n        mp4a.reserved1 = [0x0, 0x0, 0x0, 0x0, 0x0, 0x0];\n        mp4a.data_reference_index = 1;\n\n        // AudioSampleEntry fields\n        mp4a.reserved2 = [0x0, 0x0];\n        mp4a.channelcount = representation.audioChannels;\n        mp4a.samplesize = 16;\n        mp4a.pre_defined = 0;\n        mp4a.reserved_3 = 0;\n        mp4a.samplerate = representation.audioSamplingRate << 16;\n\n        mp4a.esds = createMPEG4AACESDescriptor();\n\n        if (contentProtection) {\n            // Create and add Protection Scheme Info Box\n            let sinf = ISOBoxer.createBox('sinf', mp4a);\n\n            // Create and add Original Format Box => indicate codec type of the encrypted content\n            createOriginalFormatBox(sinf, codec);\n\n            // Create and add Scheme Type box\n            createSchemeTypeBox(sinf);\n\n            // Create and add Scheme Information Box\n            createSchemeInformationBox(sinf);\n        }\n\n        return mp4a;\n    }\n\n    function createMPEG4AACESDescriptor() {\n\n        // AudioSpecificConfig (see ISO/IEC 14496-3, subpart 1) => corresponds to hex bytes contained in 'codecPrivateData' field\n        let audioSpecificConfig = hexStringtoBuffer(representation.codecPrivateData);\n\n        // ESDS length = esds box header length (= 12) +\n        //               ES_Descriptor header length (= 5) +\n        //               DecoderConfigDescriptor header length (= 15) +\n        //               decoderSpecificInfo header length (= 2) +\n        //               AudioSpecificConfig length (= codecPrivateData length)\n        let esdsLength = 34 + audioSpecificConfig.length;\n        let esds = new Uint8Array(esdsLength);\n\n        let i = 0;\n        // esds box\n        esds[i++] = (esdsLength & 0xFF000000) >> 24; // esds box length\n        esds[i++] = (esdsLength & 0x00FF0000) >> 16; // ''\n        esds[i++] = (esdsLength & 0x0000FF00) >> 8; // ''\n        esds[i++] = (esdsLength & 0x000000FF); // ''\n        esds.set([0x65, 0x73, 0x64, 0x73], i); // type = 'esds'\n        i += 4;\n        esds.set([0, 0, 0, 0], i); // version = 0, flags = 0\n        i += 4;\n        // ES_Descriptor (see ISO/IEC 14496-1 (Systems))\n        esds[i++] = 0x03; // tag = 0x03 (ES_DescrTag)\n        esds[i++] = 20 + audioSpecificConfig.length; // size\n        esds[i++] = (trackId & 0xFF00) >> 8; // ES_ID = track_id\n        esds[i++] = (trackId & 0x00FF); // ''\n        esds[i++] = 0; // flags and streamPriority\n\n        // DecoderConfigDescriptor (see ISO/IEC 14496-1 (Systems))\n        esds[i++] = 0x04; // tag = 0x04 (DecoderConfigDescrTag)\n        esds[i++] = 15 + audioSpecificConfig.length; // size\n        esds[i++] = 0x40; // objectTypeIndication = 0x40 (MPEG-4 AAC)\n        esds[i] = 0x05 << 2; // streamType = 0x05 (Audiostream)\n        esds[i] |= 0 << 1; // upStream = 0\n        esds[i++] |= 1; // reserved = 1\n        esds[i++] = 0xFF; // buffersizeDB = undefined\n        esds[i++] = 0xFF; // ''\n        esds[i++] = 0xFF; // ''\n        esds[i++] = (representation.bandwidth & 0xFF000000) >> 24; // maxBitrate\n        esds[i++] = (representation.bandwidth & 0x00FF0000) >> 16; // ''\n        esds[i++] = (representation.bandwidth & 0x0000FF00) >> 8; // ''\n        esds[i++] = (representation.bandwidth & 0x000000FF); // ''\n        esds[i++] = (representation.bandwidth & 0xFF000000) >> 24; // avgbitrate\n        esds[i++] = (representation.bandwidth & 0x00FF0000) >> 16; // ''\n        esds[i++] = (representation.bandwidth & 0x0000FF00) >> 8; // ''\n        esds[i++] = (representation.bandwidth & 0x000000FF); // ''\n\n        // DecoderSpecificInfo (see ISO/IEC 14496-1 (Systems))\n        esds[i++] = 0x05; // tag = 0x05 (DecSpecificInfoTag)\n        esds[i++] = audioSpecificConfig.length; // size\n        esds.set(audioSpecificConfig, i); // AudioSpecificConfig bytes\n\n        return esds;\n    }\n\n    function createOriginalFormatBox(sinf, codec) {\n        let frma = ISOBoxer.createBox('frma', sinf);\n        frma.data_format = stringToCharCode(codec);\n    }\n\n    function createSchemeTypeBox(sinf) {\n        let schm = ISOBoxer.createFullBox('schm', sinf);\n\n        schm.flags = 0;\n        schm.version = 0;\n        schm.scheme_type = 0x63656E63; // 'cenc' => common encryption\n        schm.scheme_version = 0x00010000; // version set to 0x00010000 (Major version 1, Minor version 0)\n    }\n\n    function createSchemeInformationBox(sinf) {\n        let schi = ISOBoxer.createBox('schi', sinf);\n\n        // Create and add Track Encryption Box\n        createTrackEncryptionBox(schi);\n    }\n\n    function createProtectionSystemSpecificHeaderBox(moov, keySystems) {\n        let pssh_bytes,\n            pssh,\n            i,\n            parsedBuffer;\n\n        for (i = 0; i < keySystems.length; i += 1) {\n            pssh_bytes = keySystems[i].initData;\n            if (pssh_bytes) {\n                parsedBuffer = ISOBoxer.parseBuffer(pssh_bytes);\n                pssh = parsedBuffer.fetch('pssh');\n                if (pssh) {\n                    ISOBoxer.Utils.appendBox(moov, pssh);\n                }\n            }\n        }\n    }\n\n    function createTrackEncryptionBox(schi) {\n        let tenc = ISOBoxer.createFullBox('tenc', schi);\n\n        tenc.flags = 0;\n        tenc.version = 0;\n\n        tenc.default_IsEncrypted = 0x1;\n        tenc.default_IV_size = 8;\n        tenc.default_KID = (contentProtection && (contentProtection.length) > 0 && contentProtection[0]['cenc:default_KID']) ?\n            contentProtection[0]['cenc:default_KID'] : [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0];\n    }\n\n    function createTrexBox(moov) {\n        let trex = ISOBoxer.createFullBox('trex', moov);\n\n        trex.track_ID = trackId;\n        trex.default_sample_description_index = 1;\n        trex.default_sample_duration = 0;\n        trex.default_sample_size = 0;\n        trex.default_sample_flags = 0;\n\n        return trex;\n    }\n\n    function hexStringtoBuffer(str) {\n        let buf = new Uint8Array(str.length / 2);\n        let i;\n\n        for (i = 0; i < str.length / 2; i += 1) {\n            buf[i] = parseInt('' + str[i * 2] + str[i * 2 + 1], 16);\n        }\n        return buf;\n    }\n\n    function stringToCharCode(str) {\n        let code = 0;\n        let i;\n\n        for (i = 0; i < str.length; i += 1) {\n            code |= str.charCodeAt(i) << ((str.length - i - 1) * 8);\n        }\n        return code;\n    }\n\n    function generateMoov(rep) {\n        if (!rep || !rep.adaptation) {\n            return;\n        }\n\n        let isoFile,\n            arrayBuffer;\n\n        representation = rep;\n        adaptationSet = representation.adaptation;\n\n        period = adaptationSet.period;\n        trackId = adaptationSet.index + 1;\n        contentProtection = period.mpd.manifest.Period_asArray[period.index].AdaptationSet_asArray[adaptationSet.index].ContentProtection;\n\n        timescale = period.mpd.manifest.Period_asArray[period.index].AdaptationSet_asArray[adaptationSet.index].SegmentTemplate.timescale;\n\n        isoFile = ISOBoxer.createFile();\n        createFtypBox(isoFile);\n        createMoovBox(isoFile);\n\n        arrayBuffer = isoFile.write();\n\n        return arrayBuffer;\n    }\n\n    instance = {\n        generateMoov: generateMoov\n    };\n\n    return instance;\n}\n\nMssFragmentMoovProcessor.__dashjs_factory_name = 'MssFragmentMoovProcessor';\nexport default dashjs.FactoryMaker.getClassFactory(MssFragmentMoovProcessor); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport MssFragmentMoofProcessor from './MssFragmentMoofProcessor';\nimport MssFragmentMoovProcessor from './MssFragmentMoovProcessor';\nimport {HTTPRequest} from '../streaming/vo/metrics/HTTPRequest';\n\n\n// Add specific box processors not provided by codem-isoboxer library\n\nfunction arrayEqual(arr1, arr2) {\n    return (arr1.length === arr2.length) && arr1.every(function (element, index) {\n        return element === arr2[index];\n    });\n}\n\nfunction saioProcessor() {\n    this._procFullBox();\n    if (this.flags & 1) {\n        this._procField('aux_info_type', 'uint', 32);\n        this._procField('aux_info_type_parameter', 'uint', 32);\n    }\n    this._procField('entry_count', 'uint', 32);\n    this._procFieldArray('offset', this.entry_count, 'uint', (this.version === 1) ? 64 : 32);\n}\n\nfunction saizProcessor() {\n    this._procFullBox();\n    if (this.flags & 1) {\n        this._procField('aux_info_type', 'uint', 32);\n        this._procField('aux_info_type_parameter', 'uint', 32);\n    }\n    this._procField('default_sample_info_size', 'uint', 8);\n    this._procField('sample_count', 'uint', 32);\n    if (this.default_sample_info_size === 0) {\n        this._procFieldArray('sample_info_size', this.sample_count, 'uint', 8);\n    }\n}\n\nfunction sencProcessor() {\n    this._procFullBox();\n    this._procField('sample_count', 'uint', 32);\n    if (this.flags & 1) {\n        this._procField('IV_size', 'uint', 8);\n    }\n    this._procEntries('entry', this.sample_count, function (entry) {\n        this._procEntryField(entry, 'InitializationVector', 'data', 8);\n        if (this.flags & 2) {\n            this._procEntryField(entry, 'NumberOfEntries', 'uint', 16);\n            this._procSubEntries(entry, 'clearAndCryptedData', entry.NumberOfEntries, function (clearAndCryptedData) {\n                this._procEntryField(clearAndCryptedData, 'BytesOfClearData', 'uint', 16);\n                this._procEntryField(clearAndCryptedData, 'BytesOfEncryptedData', 'uint', 32);\n            });\n        }\n    });\n}\n\nfunction uuidProcessor() {\n    let tfxdUserType = [0x6D, 0x1D, 0x9B, 0x05, 0x42, 0xD5, 0x44, 0xE6, 0x80, 0xE2, 0x14, 0x1D, 0xAF, 0xF7, 0x57, 0xB2];\n    let tfrfUserType = [0xD4, 0x80, 0x7E, 0xF2, 0xCA, 0x39, 0x46, 0x95, 0x8E, 0x54, 0x26, 0xCB, 0x9E, 0x46, 0xA7, 0x9F];\n    let sepiffUserType = [0xA2, 0x39, 0x4F, 0x52, 0x5A, 0x9B, 0x4f, 0x14, 0xA2, 0x44, 0x6C, 0x42, 0x7C, 0x64, 0x8D, 0xF4];\n\n    if (arrayEqual(this.usertype, tfxdUserType)) {\n        this._procFullBox();\n        if (this._parsing) {\n            this.type = 'tfxd';\n        }\n        this._procField('fragment_absolute_time', 'uint', (this.version === 1) ? 64 : 32);\n        this._procField('fragment_duration', 'uint', (this.version === 1) ? 64 : 32);\n    }\n\n    if (arrayEqual(this.usertype, tfrfUserType)) {\n        this._procFullBox();\n        if (this._parsing) {\n            this.type = 'tfrf';\n        }\n        this._procField('fragment_count', 'uint', 8);\n        this._procEntries('entry', this.fragment_count, function (entry) {\n            this._procEntryField(entry, 'fragment_absolute_time', 'uint', (this.version === 1) ? 64 : 32);\n            this._procEntryField(entry, 'fragment_duration', 'uint', (this.version === 1) ? 64 : 32);\n        });\n    }\n\n    if (arrayEqual(this.usertype, sepiffUserType)) {\n        if (this._parsing) {\n            this.type = 'sepiff';\n        }\n        sencProcessor.call(this);\n    }\n}\n\nfunction MssFragmentProcessor(config) {\n\n    config = config || {};\n    const context = this.context;\n    const dashMetrics = config.dashMetrics;\n    const playbackController = config.playbackController;\n    const eventBus = config.eventBus;\n    const protectionController = config.protectionController;\n    const ISOBoxer = config.ISOBoxer;\n    const debug = config.debug;\n    let mssFragmentMoovProcessor,\n        mssFragmentMoofProcessor,\n        instance;\n\n    function setup() {\n        ISOBoxer.addBoxProcessor('uuid', uuidProcessor);\n        ISOBoxer.addBoxProcessor('saio', saioProcessor);\n        ISOBoxer.addBoxProcessor('saiz', saizProcessor);\n        ISOBoxer.addBoxProcessor('senc', sencProcessor);\n\n        mssFragmentMoovProcessor = MssFragmentMoovProcessor(context).create({\n            protectionController: protectionController,\n            constants: config.constants,\n            ISOBoxer: ISOBoxer});\n\n        mssFragmentMoofProcessor = MssFragmentMoofProcessor(context).create({\n            dashMetrics: dashMetrics,\n            playbackController: playbackController,\n            ISOBoxer: ISOBoxer,\n            eventBus: eventBus,\n            debug: debug,\n            errHandler: config.errHandler\n        });\n    }\n\n    function generateMoov(rep) {\n        return mssFragmentMoovProcessor.generateMoov(rep);\n    }\n\n    function processFragment(e, streamProcessor) {\n        if (!e || !e.request || !e.response) {\n            throw new Error('e parameter is missing or malformed');\n        }\n\n        if (e.request.type === 'MediaSegment') {\n            // MediaSegment => convert to Smooth Streaming moof format\n            mssFragmentMoofProcessor.convertFragment(e, streamProcessor);\n\n        } else if (e.request.type === HTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE) {\n            // FragmentInfo (live) => update segments list\n            mssFragmentMoofProcessor.updateSegmentList(e, streamProcessor);\n\n            // Stop event propagation (FragmentInfo must not be added to buffer)\n            e.sender = null;\n        }\n    }\n\n    instance = {\n        generateMoov: generateMoov,\n        processFragment: processFragment\n    };\n\n    setup();\n\n    return instance;\n}\n\nMssFragmentProcessor.__dashjs_factory_name = 'MssFragmentProcessor';\nexport default dashjs.FactoryMaker.getClassFactory(MssFragmentProcessor); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @module MssParser\n * @ignore\n * @param {Object} config object\n */\n\nimport BigInt from '../../../externals/BigInteger';\n\nfunction MssParser(config) {\n    config = config || {};\n    const BASE64 = config.BASE64;\n    const debug = config.debug;\n    const constants = config.constants;\n    const manifestModel = config.manifestModel;\n    const mediaPlayerModel = config.mediaPlayerModel;\n    const settings = config.settings;\n\n    const DEFAULT_TIME_SCALE = 10000000.0;\n    const SUPPORTED_CODECS = ['AAC', 'AACL', 'AVC1', 'H264', 'TTML', 'DFXP'];\n    // MPEG-DASH Role and accessibility mapping for text tracks according to ETSI TS 103 285 v1.1.1 (section 7.1.2)\n    const ROLE = {\n        'CAPT': 'main',\n        'SUBT': 'alternate',\n        'DESC': 'main'\n    };\n    const ACCESSIBILITY = {\n        'DESC': '2'\n    };\n    const samplingFrequencyIndex = {\n        96000: 0x0,\n        88200: 0x1,\n        64000: 0x2,\n        48000: 0x3,\n        44100: 0x4,\n        32000: 0x5,\n        24000: 0x6,\n        22050: 0x7,\n        16000: 0x8,\n        12000: 0x9,\n        11025: 0xA,\n        8000: 0xB,\n        7350: 0xC\n    };\n    const mimeTypeMap = {\n        'video': 'video/mp4',\n        'audio': 'audio/mp4',\n        'text': 'application/mp4'\n    };\n\n    let instance,\n        logger,\n        initialBufferSettings;\n\n\n    function setup() {\n        logger = debug.getLogger(instance);\n    }\n\n    function getAttributeAsBoolean(node, attrName) {\n        const value = node.getAttribute(attrName);\n        if (!value) return false;\n        return value.toLowerCase() === 'true';\n    }\n\n    function mapPeriod(smoothStreamingMedia, timescale) {\n        const period = {};\n        let streams,\n            adaptation;\n\n        // For each StreamIndex node, create an AdaptationSet element\n        period.AdaptationSet_asArray = [];\n        streams = smoothStreamingMedia.getElementsByTagName('StreamIndex');\n        for (let i = 0; i < streams.length; i++) {\n            adaptation = mapAdaptationSet(streams[i], timescale);\n            if (adaptation !== null) {\n                period.AdaptationSet_asArray.push(adaptation);\n            }\n        }\n\n        if (period.AdaptationSet_asArray.length > 0) {\n            period.AdaptationSet = (period.AdaptationSet_asArray.length > 1) ? period.AdaptationSet_asArray : period.AdaptationSet_asArray[0];\n        }\n\n        return period;\n    }\n\n    function mapAdaptationSet(streamIndex, timescale) {\n        const adaptationSet = {};\n        const representations = [];\n        let segmentTemplate;\n        let qualityLevels,\n            representation,\n            i,\n            index;\n\n        const name = streamIndex.getAttribute('Name');\n        const type = streamIndex.getAttribute('Type');\n        const lang = streamIndex.getAttribute('Language');\n        const fallBackId = lang ? type + '_' + lang : type;\n\n        adaptationSet.id = name || fallBackId;\n        adaptationSet.contentType = type;\n        adaptationSet.lang = lang || 'und';\n        adaptationSet.mimeType = mimeTypeMap[type];\n        adaptationSet.subType = streamIndex.getAttribute('Subtype');\n        adaptationSet.maxWidth = streamIndex.getAttribute('MaxWidth');\n        adaptationSet.maxHeight = streamIndex.getAttribute('MaxHeight');\n\n        // Map text tracks subTypes to MPEG-DASH AdaptationSet role and accessibility (see ETSI TS 103 285 v1.1.1, section 7.1.2)\n        if (adaptationSet.subType) {\n            if (ROLE[adaptationSet.subType]) {\n                let role = {\n                    schemeIdUri: 'urn:mpeg:dash:role:2011',\n                    value: ROLE[adaptationSet.subType]\n                };\n                adaptationSet.Role = role;\n                adaptationSet.Role_asArray = [role];\n            }\n            if (ACCESSIBILITY[adaptationSet.subType]) {\n                let accessibility = {\n                    schemeIdUri: 'urn:tva:metadata:cs:AudioPurposeCS:2007',\n                    value: ACCESSIBILITY[adaptationSet.subType]\n                };\n                adaptationSet.Accessibility = accessibility;\n                adaptationSet.Accessibility_asArray = [accessibility];\n            }\n        }\n\n        // Create a SegmentTemplate with a SegmentTimeline\n        segmentTemplate = mapSegmentTemplate(streamIndex, timescale);\n\n        qualityLevels = streamIndex.getElementsByTagName('QualityLevel');\n        // For each QualityLevel node, create a Representation element\n        for (i = 0; i < qualityLevels.length; i++) {\n            // Propagate BaseURL and mimeType\n            qualityLevels[i].BaseURL = adaptationSet.BaseURL;\n            qualityLevels[i].mimeType = adaptationSet.mimeType;\n\n            // Set quality level id\n            index = qualityLevels[i].getAttribute('Index');\n            qualityLevels[i].Id = adaptationSet.id + ((index !== null) ? ('_' + index) : '');\n\n            // Map Representation to QualityLevel\n            representation = mapRepresentation(qualityLevels[i], streamIndex);\n\n            if (representation !== null) {\n                // Copy SegmentTemplate into Representation\n                representation.SegmentTemplate = segmentTemplate;\n\n                representations.push(representation);\n            }\n        }\n\n        if (representations.length === 0) {\n            return null;\n        }\n\n        adaptationSet.Representation = (representations.length > 1) ? representations : representations[0];\n        adaptationSet.Representation_asArray = representations;\n\n        // Set SegmentTemplate\n        adaptationSet.SegmentTemplate = segmentTemplate;\n\n        return adaptationSet;\n    }\n\n    function mapRepresentation(qualityLevel, streamIndex) {\n        const representation = {};\n        const type = streamIndex.getAttribute('Type');\n        let fourCCValue = null;\n        let width = null;\n        let height = null;\n\n        representation.id = qualityLevel.Id;\n        representation.bandwidth = parseInt(qualityLevel.getAttribute('Bitrate'), 10);\n        representation.mimeType = qualityLevel.mimeType;\n\n        width = parseInt(qualityLevel.getAttribute('MaxWidth'), 10);\n        height = parseInt(qualityLevel.getAttribute('MaxHeight'), 10);\n        if (!isNaN(width)) representation.width = width;\n        if (!isNaN(height)) representation.height = height;\n\n\n        fourCCValue = qualityLevel.getAttribute('FourCC');\n\n        // If FourCC not defined at QualityLevel level, then get it from StreamIndex level\n        if (fourCCValue === null || fourCCValue === '') {\n            fourCCValue = streamIndex.getAttribute('FourCC');\n        }\n\n        // If still not defined (optionnal for audio stream, see https://msdn.microsoft.com/en-us/library/ff728116%28v=vs.95%29.aspx),\n        // then we consider the stream is an audio AAC stream\n        if (fourCCValue === null || fourCCValue === '') {\n            if (type === constants.AUDIO) {\n                fourCCValue = 'AAC';\n            } else if (type === constants.VIDEO) {\n                logger.debug('FourCC is not defined whereas it is required for a QualityLevel element for a StreamIndex of type \"video\"');\n                return null;\n            }\n        }\n\n        // Check if codec is supported\n        if (SUPPORTED_CODECS.indexOf(fourCCValue.toUpperCase()) === -1) {\n            // Do not send warning\n            logger.warn('Codec not supported: ' + fourCCValue);\n            return null;\n        }\n\n        // Get codecs value according to FourCC field\n        if (fourCCValue === 'H264' || fourCCValue === 'AVC1') {\n            representation.codecs = getH264Codec(qualityLevel);\n        } else if (fourCCValue.indexOf('AAC') >= 0) {\n            representation.codecs = getAACCodec(qualityLevel, fourCCValue);\n            representation.audioSamplingRate = parseInt(qualityLevel.getAttribute('SamplingRate'), 10);\n            representation.audioChannels = parseInt(qualityLevel.getAttribute('Channels'), 10);\n        } else if (fourCCValue.indexOf('TTML') || fourCCValue.indexOf('DFXP')) {\n            representation.codecs = constants.STPP;\n        }\n\n        representation.codecPrivateData = '' + qualityLevel.getAttribute('CodecPrivateData');\n        representation.BaseURL = qualityLevel.BaseURL;\n\n        return representation;\n    }\n\n    function getH264Codec(qualityLevel) {\n        let codecPrivateData = qualityLevel.getAttribute('CodecPrivateData').toString();\n        let nalHeader,\n            avcoti;\n\n\n        // Extract from the CodecPrivateData field the hexadecimal representation of the following\n        // three bytes in the sequence parameter set NAL unit.\n        // => Find the SPS nal header\n        nalHeader = /00000001[0-9]7/.exec(codecPrivateData);\n        // => Find the 6 characters after the SPS nalHeader (if it exists)\n        avcoti = nalHeader && nalHeader[0] ? (codecPrivateData.substr(codecPrivateData.indexOf(nalHeader[0]) + 10, 6)) : undefined;\n\n        return 'avc1.' + avcoti;\n    }\n\n    function getAACCodec(qualityLevel, fourCCValue) {\n        const samplingRate = parseInt(qualityLevel.getAttribute('SamplingRate'), 10);\n        let codecPrivateData = qualityLevel.getAttribute('CodecPrivateData').toString();\n        let objectType = 0;\n        let codecPrivateDataHex,\n            arr16,\n            indexFreq,\n            extensionSamplingFrequencyIndex;\n\n        //chrome problem, in implicit AAC HE definition, so when AACH is detected in FourCC\n        //set objectType to 5 => strange, it should be 2\n        if (fourCCValue === 'AACH') {\n            objectType = 0x05;\n        }\n        //if codecPrivateData is empty, build it :\n        if (codecPrivateData === undefined || codecPrivateData === '') {\n            objectType = 0x02; //AAC Main Low Complexity => object Type = 2\n            indexFreq = samplingFrequencyIndex[samplingRate];\n            if (fourCCValue === 'AACH') {\n                // 4 bytes :     XXXXX         XXXX          XXXX             XXXX                  XXXXX      XXX   XXXXXXX\n                //           ' ObjectType' 'Freq Index' 'Channels value'   'Extens Sampl Freq'  'ObjectType'  'GAS' 'alignment = 0'\n                objectType = 0x05; // High Efficiency AAC Profile = object Type = 5 SBR\n                codecPrivateData = new Uint8Array(4);\n                extensionSamplingFrequencyIndex = samplingFrequencyIndex[samplingRate * 2]; // in HE AAC Extension Sampling frequence\n                // equals to SamplingRate*2\n                //Freq Index is present for 3 bits in the first byte, last bit is in the second\n                codecPrivateData[0] = (objectType << 3) | (indexFreq >> 1);\n                codecPrivateData[1] = (indexFreq << 7) | (qualityLevel.Channels << 3) | (extensionSamplingFrequencyIndex >> 1);\n                codecPrivateData[2] = (extensionSamplingFrequencyIndex << 7) | (0x02 << 2); // origin object type equals to 2 => AAC Main Low Complexity\n                codecPrivateData[3] = 0x0; //alignment bits\n\n                arr16 = new Uint16Array(2);\n                arr16[0] = (codecPrivateData[0] << 8) + codecPrivateData[1];\n                arr16[1] = (codecPrivateData[2] << 8) + codecPrivateData[3];\n                //convert decimal to hex value\n                codecPrivateDataHex = arr16[0].toString(16);\n                codecPrivateDataHex = arr16[0].toString(16) + arr16[1].toString(16);\n\n            } else {\n                // 2 bytes :     XXXXX         XXXX          XXXX              XXX\n                //           ' ObjectType' 'Freq Index' 'Channels value'   'GAS = 000'\n                codecPrivateData = new Uint8Array(2);\n                //Freq Index is present for 3 bits in the first byte, last bit is in the second\n                codecPrivateData[0] = (objectType << 3) | (indexFreq >> 1);\n                codecPrivateData[1] = (indexFreq << 7) | (parseInt(qualityLevel.getAttribute('Channels'), 10) << 3);\n                // put the 2 bytes in an 16 bits array\n                arr16 = new Uint16Array(1);\n                arr16[0] = (codecPrivateData[0] << 8) + codecPrivateData[1];\n                //convert decimal to hex value\n                codecPrivateDataHex = arr16[0].toString(16);\n            }\n\n            codecPrivateData = '' + codecPrivateDataHex;\n            codecPrivateData = codecPrivateData.toUpperCase();\n            qualityLevel.setAttribute('CodecPrivateData', codecPrivateData);\n        } else if (objectType === 0) {\n            objectType = (parseInt(codecPrivateData.substr(0, 2), 16) & 0xF8) >> 3;\n        }\n\n        return 'mp4a.40.' + objectType;\n    }\n\n    function mapSegmentTemplate(streamIndex, timescale) {\n        const segmentTemplate = {};\n        let mediaUrl,\n            streamIndexTimeScale,\n            url;\n\n        url = streamIndex.getAttribute('Url');\n        mediaUrl = url ? url.replace('{bitrate}', '$Bandwidth$') : null;\n        mediaUrl = mediaUrl ? mediaUrl.replace('{start time}', '$Time$') : null;\n\n        streamIndexTimeScale = streamIndex.getAttribute('TimeScale');\n        streamIndexTimeScale = streamIndexTimeScale ? parseFloat(streamIndexTimeScale) : timescale;\n\n        segmentTemplate.media = mediaUrl;\n        segmentTemplate.timescale = streamIndexTimeScale;\n\n        segmentTemplate.SegmentTimeline = mapSegmentTimeline(streamIndex, segmentTemplate.timescale);\n\n        // Patch: set availabilityTimeOffset to Infinity since segments are available as long as they are present in timeline\n        segmentTemplate.availabilityTimeOffset = 'INF';\n\n        return segmentTemplate;\n    }\n\n    function mapSegmentTimeline(streamIndex, timescale) {\n        const segmentTimeline = {};\n        const chunks = streamIndex.getElementsByTagName('c');\n        const segments = [];\n        let segment,\n            prevSegment,\n            tManifest,\n            i, j, r;\n        let duration = 0;\n\n        for (i = 0; i < chunks.length; i++) {\n            segment = {};\n\n            // Get time 't' attribute value\n            tManifest = chunks[i].getAttribute('t');\n\n            // => segment.tManifest = original timestamp value as a string (for constructing the fragment request url, see DashHandler)\n            // => segment.t = number value of timestamp (maybe rounded value, but only for 0.1 microsecond)\n            if (tManifest && BigInt(tManifest).greater(BigInt(Number.MAX_SAFE_INTEGER))) {\n                segment.tManifest = tManifest;\n            }\n            segment.t = parseFloat(tManifest);\n\n            // Get duration 'd' attribute value\n            segment.d = parseFloat(chunks[i].getAttribute('d'));\n\n            // If 't' not defined for first segment then t=0\n            if ((i === 0) && !segment.t) {\n                segment.t = 0;\n            }\n\n            if (i > 0) {\n                prevSegment = segments[segments.length - 1];\n                // Update previous segment duration if not defined\n                if (!prevSegment.d) {\n                    if (prevSegment.tManifest) {\n                        prevSegment.d = BigInt(tManifest).subtract(BigInt(prevSegment.tManifest)).toJSNumber();\n                    } else {\n                        prevSegment.d = segment.t - prevSegment.t;\n                    }\n                    duration += prevSegment.d;\n                }\n                // Set segment absolute timestamp if not set in manifest\n                if (!segment.t) {\n                    if (prevSegment.tManifest) {\n                        segment.tManifest = BigInt(prevSegment.tManifest).add(BigInt(prevSegment.d)).toString();\n                        segment.t = parseFloat(segment.tManifest);\n                    } else {\n                        segment.t = prevSegment.t + prevSegment.d;\n                    }\n                }\n            }\n\n            if (segment.d) {\n                duration += segment.d;\n            }\n\n            // Create new segment\n            segments.push(segment);\n\n            // Support for 'r' attribute (i.e. \"repeat\" as in MPEG-DASH)\n            r = parseFloat(chunks[i].getAttribute('r'));\n            if (r) {\n\n                for (j = 0; j < (r - 1); j++) {\n                    prevSegment = segments[segments.length - 1];\n                    segment = {};\n                    segment.t = prevSegment.t + prevSegment.d;\n                    segment.d = prevSegment.d;\n                    if (prevSegment.tManifest) {\n                        segment.tManifest = BigInt(prevSegment.tManifest).add(BigInt(prevSegment.d)).toString();\n                    }\n                    duration += segment.d;\n                    segments.push(segment);\n                }\n            }\n        }\n\n        segmentTimeline.S = segments;\n        segmentTimeline.S_asArray = segments;\n        segmentTimeline.duration = duration / timescale;\n\n        return segmentTimeline;\n    }\n\n    function getKIDFromProtectionHeader(protectionHeader) {\n        let prHeader,\n            wrmHeader,\n            xmlReader,\n            KID;\n\n        // Get PlayReady header as byte array (base64 decoded)\n        prHeader = BASE64.decodeArray(protectionHeader.firstChild.data);\n\n        // Get Right Management header (WRMHEADER) from PlayReady header\n        wrmHeader = getWRMHeaderFromPRHeader(prHeader);\n\n        if (wrmHeader) {\n            // Convert from multi-byte to unicode\n            wrmHeader = new Uint16Array(wrmHeader.buffer);\n\n            // Convert to string\n            wrmHeader = String.fromCharCode.apply(null, wrmHeader);\n\n            // Parse <WRMHeader> to get KID field value\n            xmlReader = (new DOMParser()).parseFromString(wrmHeader, 'application/xml');\n            KID = xmlReader.querySelector('KID').textContent;\n\n            // Get KID (base64 decoded) as byte array\n            KID = BASE64.decodeArray(KID);\n\n            // Convert UUID from little-endian to big-endian\n            convertUuidEndianness(KID);\n        }\n\n        return KID;\n    }\n\n    function getWRMHeaderFromPRHeader(prHeader) {\n        let length,\n            recordCount,\n            recordType,\n            recordLength,\n            recordValue;\n        let i = 0;\n\n        // Parse PlayReady header\n\n        // Length - 32 bits (LE format)\n        length = (prHeader[i + 3] << 24) + (prHeader[i + 2] << 16) + (prHeader[i + 1] << 8) + prHeader[i]; // eslint-disable-line\n        i += 4;\n\n        // Record count - 16 bits (LE format)\n        recordCount = (prHeader[i + 1] << 8) + prHeader[i]; // eslint-disable-line\n        i += 2;\n\n        // Parse records\n        while (i < prHeader.length) {\n            // Record type - 16 bits (LE format)\n            recordType = (prHeader[i + 1] << 8) + prHeader[i];\n            i += 2;\n\n            // Check if Rights Management header (record type = 0x01)\n            if (recordType === 0x01) {\n\n                // Record length - 16 bits (LE format)\n                recordLength = (prHeader[i + 1] << 8) + prHeader[i];\n                i += 2;\n\n                // Record value => contains <WRMHEADER>\n                recordValue = new Uint8Array(recordLength);\n                recordValue.set(prHeader.subarray(i, i + recordLength));\n                return recordValue;\n            }\n        }\n\n        return null;\n    }\n\n    function convertUuidEndianness(uuid) {\n        swapBytes(uuid, 0, 3);\n        swapBytes(uuid, 1, 2);\n        swapBytes(uuid, 4, 5);\n        swapBytes(uuid, 6, 7);\n    }\n\n    function swapBytes(bytes, pos1, pos2) {\n        const temp = bytes[pos1];\n        bytes[pos1] = bytes[pos2];\n        bytes[pos2] = temp;\n    }\n\n\n    function createPRContentProtection(protectionHeader) {\n        let pro = {\n            __text: protectionHeader.firstChild.data,\n            __prefix: 'mspr'\n        };\n        return {\n            schemeIdUri: 'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95',\n            value: 'com.microsoft.playready',\n            pro: pro,\n            pro_asArray: pro\n        };\n    }\n\n    function createWidevineContentProtection(KID) {\n        let widevineCP = {\n            schemeIdUri: 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed',\n            value: 'com.widevine.alpha'\n        };\n        if (!KID)\n            return widevineCP;\n        // Create Widevine CENC header (Protocol Buffer) with KID value\n        const wvCencHeader = new Uint8Array(2 + KID.length);\n        wvCencHeader[0] = 0x12;\n        wvCencHeader[1] = 0x10;\n        wvCencHeader.set(KID, 2);\n\n        // Create a pssh box\n        const length = 12 /* box length, type, version and flags */ + 16 /* SystemID */ + 4 /* data length */ + wvCencHeader.length;\n        let pssh = new Uint8Array(length);\n        let i = 0;\n\n        // Set box length value\n        pssh[i++] = (length & 0xFF000000) >> 24;\n        pssh[i++] = (length & 0x00FF0000) >> 16;\n        pssh[i++] = (length & 0x0000FF00) >> 8;\n        pssh[i++] = (length & 0x000000FF);\n\n        // Set type ('pssh'), version (0) and flags (0)\n        pssh.set([0x70, 0x73, 0x73, 0x68, 0x00, 0x00, 0x00, 0x00], i);\n        i += 8;\n\n        // Set SystemID ('edef8ba9-79d6-4ace-a3c8-27dcd51d21ed')\n        pssh.set([0xed, 0xef, 0x8b, 0xa9, 0x79, 0xd6, 0x4a, 0xce, 0xa3, 0xc8, 0x27, 0xdc, 0xd5, 0x1d, 0x21, 0xed], i);\n        i += 16;\n\n        // Set data length value\n        pssh[i++] = (wvCencHeader.length & 0xFF000000) >> 24;\n        pssh[i++] = (wvCencHeader.length & 0x00FF0000) >> 16;\n        pssh[i++] = (wvCencHeader.length & 0x0000FF00) >> 8;\n        pssh[i++] = (wvCencHeader.length & 0x000000FF);\n\n        // Copy Widevine CENC header\n        pssh.set(wvCencHeader, i);\n\n        // Convert to BASE64 string\n        pssh = String.fromCharCode.apply(null, pssh);\n        pssh = BASE64.encodeASCII(pssh);\n\n        widevineCP.pssh = { __text: pssh };\n\n        return widevineCP;\n    }\n\n    function processManifest(xmlDoc) {\n        const manifest = {};\n        const contentProtections = [];\n        const smoothStreamingMedia = xmlDoc.getElementsByTagName('SmoothStreamingMedia')[0];\n        const protection = xmlDoc.getElementsByTagName('Protection')[0];\n        let protectionHeader = null;\n        let period,\n            adaptations,\n            contentProtection,\n            KID,\n            timestampOffset,\n            startTime,\n            segments,\n            timescale,\n            segmentDuration,\n            i, j;\n\n        // Set manifest node properties\n        manifest.protocol = 'MSS';\n        manifest.profiles = 'urn:mpeg:dash:profile:isoff-live:2011';\n        manifest.type = getAttributeAsBoolean(smoothStreamingMedia, 'IsLive') ? 'dynamic' : 'static';\n        timescale = smoothStreamingMedia.getAttribute('TimeScale');\n        manifest.timescale = timescale ? parseFloat(timescale) : DEFAULT_TIME_SCALE;\n        let dvrWindowLength = parseFloat(smoothStreamingMedia.getAttribute('DVRWindowLength'));\n        // If the DVRWindowLength field is omitted for a live presentation or set to 0, the DVR window is effectively infinite\n        if (manifest.type === 'dynamic' && (dvrWindowLength === 0 || isNaN(dvrWindowLength))) {\n            dvrWindowLength = Infinity;\n        }\n        // Star-over\n        if (dvrWindowLength === 0 && getAttributeAsBoolean(smoothStreamingMedia, 'CanSeek')) {\n            dvrWindowLength = Infinity;\n        }\n\n        if (dvrWindowLength > 0) {\n            manifest.timeShiftBufferDepth = dvrWindowLength / manifest.timescale;\n        }\n\n        let duration = parseFloat(smoothStreamingMedia.getAttribute('Duration'));\n        manifest.mediaPresentationDuration = (duration === 0) ? Infinity : duration / manifest.timescale;\n        // By default, set minBufferTime to 2 sec. (but set below according to video segment duration)\n        manifest.minBufferTime = 2;\n        manifest.ttmlTimeIsRelative = true;\n\n        // Live manifest with Duration = start-over\n        if (manifest.type === 'dynamic' && duration > 0) {\n            manifest.type = 'static';\n            // We set timeShiftBufferDepth to initial duration, to be used by MssFragmentController to update segment timeline\n            manifest.timeShiftBufferDepth = duration / manifest.timescale;\n            // Duration will be set according to current segment timeline duration (see below)\n        }\n\n        if (manifest.type === 'dynamic') {\n            manifest.refreshManifestOnSwitchTrack = true; // Refresh manifest when switching tracks\n            manifest.doNotUpdateDVRWindowOnBufferUpdated = true; // DVRWindow is update by MssFragmentMoofPocessor based on tfrf boxes\n            manifest.ignorePostponeTimePeriod = true; // Never update manifest\n            manifest.availabilityStartTime = new Date(null); // Returns 1970\n        }\n\n        // Map period node to manifest root node\n        manifest.Period = mapPeriod(smoothStreamingMedia, manifest.timescale);\n        manifest.Period_asArray = [manifest.Period];\n\n        // Initialize period start time\n        period = manifest.Period;\n        period.start = 0;\n\n        // Uncomment to test live to static manifests\n        // if (manifest.type !== 'static') {\n        //     manifest.type = 'static';\n        //     manifest.mediaPresentationDuration = manifest.timeShiftBufferDepth;\n        //     manifest.timeShiftBufferDepth = null;\n        // }\n\n        // ContentProtection node\n        if (protection !== undefined) {\n            protectionHeader = xmlDoc.getElementsByTagName('ProtectionHeader')[0];\n\n            // Some packagers put newlines into the ProtectionHeader base64 string, which is not good\n            // because this cannot be correctly parsed. Let's just filter out any newlines found in there.\n            protectionHeader.firstChild.data = protectionHeader.firstChild.data.replace(/\\n|\\r/g, '');\n\n            // Get KID (in CENC format) from protection header\n            KID = getKIDFromProtectionHeader(protectionHeader);\n\n            // Create ContentProtection for PlayReady\n            contentProtection = createPRContentProtection(protectionHeader);\n            contentProtection['cenc:default_KID'] = KID;\n            contentProtections.push(contentProtection);\n\n            // Create ContentProtection for Widevine (as a CENC protection)\n            contentProtection = createWidevineContentProtection(KID);\n            contentProtection['cenc:default_KID'] = KID;\n            contentProtections.push(contentProtection);\n\n            manifest.ContentProtection = contentProtections;\n            manifest.ContentProtection_asArray = contentProtections;\n        }\n\n        adaptations = period.AdaptationSet_asArray;\n\n        for (i = 0; i < adaptations.length; i += 1) {\n            adaptations[i].SegmentTemplate.initialization = '$Bandwidth$';\n            // Propagate content protection information into each adaptation\n            if (manifest.ContentProtection !== undefined) {\n                adaptations[i].ContentProtection = manifest.ContentProtection;\n                adaptations[i].ContentProtection_asArray = manifest.ContentProtection_asArray;\n            }\n\n            if (adaptations[i].contentType === 'video') {\n                // Get video segment duration\n                segmentDuration = adaptations[i].SegmentTemplate.SegmentTimeline.S_asArray[0].d / adaptations[i].SegmentTemplate.timescale;\n                // Set minBufferTime to one segment duration\n                manifest.minBufferTime = segmentDuration;\n\n                if (manifest.type === 'dynamic') {\n                    // Match timeShiftBufferDepth to video segment timeline duration\n                    if (manifest.timeShiftBufferDepth > 0 &&\n                        manifest.timeShiftBufferDepth !== Infinity &&\n                        manifest.timeShiftBufferDepth > adaptations[i].SegmentTemplate.SegmentTimeline.duration) {\n                        manifest.timeShiftBufferDepth = adaptations[i].SegmentTemplate.SegmentTimeline.duration;\n                    }\n                }\n            }\n        }\n\n        // Cap minBufferTime to timeShiftBufferDepth\n        manifest.minBufferTime = Math.min(manifest.minBufferTime, (manifest.timeShiftBufferDepth ? manifest.timeShiftBufferDepth : Infinity));\n\n        // In case of live streams:\n        // 1- configure player buffering properties according to target live delay\n        // 2- adapt live delay and then buffers length in case timeShiftBufferDepth is too small compared to target live delay (see PlaybackController.computeLiveDelay())\n        // 3- Set retry attempts and intervals for FragmentInfo requests\n        if (manifest.type === 'dynamic') {\n            let targetLiveDelay = mediaPlayerModel.getLiveDelay();\n            if (!targetLiveDelay) {\n                const liveDelayFragmentCount = settings.get().streaming.delay.liveDelayFragmentCount !== null && !isNaN(settings.get().streaming.delay.liveDelayFragmentCount) ? settings.get().streaming.delay.liveDelayFragmentCount : 4;\n                targetLiveDelay = segmentDuration * liveDelayFragmentCount;\n            }\n            let targetDelayCapping = Math.max(manifest.timeShiftBufferDepth - 10/*END_OF_PLAYLIST_PADDING*/, manifest.timeShiftBufferDepth / 2);\n            let liveDelay = Math.min(targetDelayCapping, targetLiveDelay);\n            // Consider a margin of more than one segment in order to avoid Precondition Failed errors (412), for example if audio and video are not correctly synchronized\n            let bufferTime = liveDelay - (segmentDuration * 1.5);\n\n            // Store initial buffer settings\n            initialBufferSettings = {\n                'streaming': {\n                    'buffer': {\n                        'stableBufferTime': settings.get().streaming.buffer.stableBufferTime,\n                        'bufferTimeAtTopQuality': settings.get().streaming.buffer.bufferTimeAtTopQuality,\n                        'bufferTimeAtTopQualityLongForm': settings.get().streaming.buffer.bufferTimeAtTopQualityLongForm\n                    },\n                    'timeShiftBuffer': {\n                        calcFromSegmentTimeline: settings.get().streaming.timeShiftBuffer.calcFromSegmentTimeline\n                    },\n                    'delay': {\n                        'liveDelay': settings.get().streaming.delay.liveDelay\n                    }\n                }\n            };\n\n            settings.update({\n                'streaming': {\n                    'buffer': {\n                        'stableBufferTime': bufferTime,\n                        'bufferTimeAtTopQuality': bufferTime,\n                        'bufferTimeAtTopQualityLongForm': bufferTime\n                    },\n                    'timeShiftBuffer': {\n                        calcFromSegmentTimeline: true\n                    },\n                    'delay': {\n                        'liveDelay': liveDelay\n                    }\n                }\n            });\n        }\n\n        // Delete Content Protection under root manifest node\n        delete manifest.ContentProtection;\n        delete manifest.ContentProtection_asArray;\n\n        // In case of VOD streams, check if start time is greater than 0\n        // Then determine timestamp offset according to higher audio/video start time\n        // (use case = live stream delinearization)\n        if (manifest.type === 'static') {\n            // In case of start-over stream and manifest reloading (due to track switch)\n            // we consider previous timestampOffset to keep timelines synchronized\n            var prevManifest = manifestModel.getValue();\n            if (prevManifest && prevManifest.timestampOffset) {\n                timestampOffset = prevManifest.timestampOffset;\n            } else {\n                for (i = 0; i < adaptations.length; i++) {\n                    if (adaptations[i].contentType === constants.AUDIO || adaptations[i].contentType === constants.VIDEO) {\n                        segments = adaptations[i].SegmentTemplate.SegmentTimeline.S_asArray;\n                        startTime = segments[0].t;\n                        if (timestampOffset === undefined) {\n                            timestampOffset = startTime;\n                        }\n                        timestampOffset = Math.min(timestampOffset, startTime);\n                        // Correct content duration according to minimum adaptation's segment timeline duration\n                        // in order to force <video> element sending 'ended' event\n                        manifest.mediaPresentationDuration = Math.min(manifest.mediaPresentationDuration, adaptations[i].SegmentTemplate.SegmentTimeline.duration);\n                    }\n                }\n            }\n            if (timestampOffset > 0) {\n                // Patch segment templates timestamps and determine period start time (since audio/video should not be aligned to 0)\n                manifest.timestampOffset = timestampOffset;\n                for (i = 0; i < adaptations.length; i++) {\n                    segments = adaptations[i].SegmentTemplate.SegmentTimeline.S_asArray;\n                    for (j = 0; j < segments.length; j++) {\n                        if (!segments[j].tManifest) {\n                            segments[j].tManifest = segments[j].t.toString();\n                        }\n                        segments[j].t -= timestampOffset;\n                    }\n                    if (adaptations[i].contentType === constants.AUDIO || adaptations[i].contentType === constants.VIDEO) {\n                        period.start = Math.max(segments[0].t, period.start);\n                        adaptations[i].SegmentTemplate.presentationTimeOffset = period.start;\n                    }\n                }\n                period.start /= manifest.timescale;\n            }\n        }\n\n        // Floor the duration to get around precision differences between segments timestamps and MSE buffer timestamps\n        // and then avoid 'ended' event not being raised\n        manifest.mediaPresentationDuration = Math.floor(manifest.mediaPresentationDuration * 1000) / 1000;\n        period.duration = manifest.mediaPresentationDuration;\n\n        return manifest;\n    }\n\n    function parseDOM(data) {\n        let xmlDoc = null;\n\n        if (window.DOMParser) {\n            const parser = new window.DOMParser();\n\n            xmlDoc = parser.parseFromString(data, 'text/xml');\n            if (xmlDoc.getElementsByTagName('parsererror').length > 0) {\n                throw new Error('parsing the manifest failed');\n            }\n        }\n\n        return xmlDoc;\n    }\n\n    function getMatchers() {\n        return null;\n    }\n\n    function getIron() {\n        return null;\n    }\n\n    function internalParse(data) {\n        let xmlDoc = null;\n        let manifest = null;\n\n        const startTime = window.performance.now();\n\n        // Parse the MSS XML manifest\n        xmlDoc = parseDOM(data);\n\n        const xmlParseTime = window.performance.now();\n\n        if (xmlDoc === null) {\n            return null;\n        }\n\n        // Convert MSS manifest into DASH manifest\n        manifest = processManifest(xmlDoc, new Date());\n\n        const mss2dashTime = window.performance.now();\n\n        logger.info('Parsing complete: (xmlParsing: ' + (xmlParseTime - startTime).toPrecision(3) + 'ms, mss2dash: ' + (mss2dashTime - xmlParseTime).toPrecision(3) + 'ms, total: ' + ((mss2dashTime - startTime) / 1000).toPrecision(3) + 's)');\n\n        return manifest;\n    }\n\n    function reset() {\n        // Restore initial buffer settings\n        if (initialBufferSettings) {\n            settings.update(initialBufferSettings);\n        }\n    }\n\n    instance = {\n        parse: internalParse,\n        getMatchers: getMatchers,\n        getIron: getIron,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nMssParser.__dashjs_factory_name = 'MssParser';\nexport default dashjs.FactoryMaker.getClassFactory(MssParser); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport DataChunk from '../streaming/vo/DataChunk';\nimport FragmentRequest from '../streaming/vo/FragmentRequest';\nimport MssFragmentInfoController from './MssFragmentInfoController';\nimport MssFragmentProcessor from './MssFragmentProcessor';\nimport MssParser from './parser/MssParser';\nimport MssErrors from './errors/MssErrors';\nimport DashJSError from '../streaming/vo/DashJSError';\nimport {HTTPRequest} from '../streaming/vo/metrics/HTTPRequest';\n\nfunction MssHandler(config) {\n\n    config = config || {};\n    const context = this.context;\n    const eventBus = config.eventBus;\n    const events = config.events;\n    const constants = config.constants;\n    const initSegmentType = config.initSegmentType;\n    const dashMetrics = config.dashMetrics;\n    const playbackController = config.playbackController;\n    const streamController = config.streamController;\n    const protectionController = config.protectionController;\n    const mssFragmentProcessor = MssFragmentProcessor(context).create({\n        dashMetrics: dashMetrics,\n        playbackController: playbackController,\n        protectionController: protectionController,\n        streamController: streamController,\n        eventBus: eventBus,\n        constants: constants,\n        ISOBoxer: config.ISOBoxer,\n        debug: config.debug,\n        errHandler: config.errHandler\n    });\n    let mssParser,\n        fragmentInfoControllers,\n        instance;\n\n    function setup() {\n        fragmentInfoControllers = [];\n    }\n\n    function getStreamProcessor(type) {\n        return streamController.getActiveStreamProcessors().filter(processor => {\n            return processor.getType() === type;\n        })[0];\n    }\n\n    function getFragmentInfoController(type) {\n        return fragmentInfoControllers.filter(controller => {\n            return (controller.getType() === type);\n        })[0];\n    }\n\n    function createDataChunk(request, streamId, endFragment) {\n        const chunk = new DataChunk();\n\n        chunk.streamId = streamId;\n        chunk.mediaInfo = request.mediaInfo;\n        chunk.segmentType = request.type;\n        chunk.start = request.startTime;\n        chunk.duration = request.duration;\n        chunk.end = chunk.start + chunk.duration;\n        chunk.index = request.index;\n        chunk.quality = request.quality;\n        chunk.representationId = request.representationId;\n        chunk.endFragment = endFragment;\n\n        return chunk;\n    }\n\n    function startFragmentInfoControllers() {\n\n        // Create MssFragmentInfoControllers for each StreamProcessor of active stream (only for audio, video or text)\n        let processors = streamController.getActiveStreamProcessors();\n        processors.forEach(function (processor) {\n            if (processor.getType() === constants.VIDEO ||\n                processor.getType() === constants.AUDIO ||\n                processor.getType() === constants.TEXT) {\n\n                let fragmentInfoController = getFragmentInfoController(processor.getType());\n                if (!fragmentInfoController) {\n                    fragmentInfoController = MssFragmentInfoController(context).create({\n                        streamProcessor: processor,\n                        baseURLController: config.baseURLController,\n                        debug: config.debug\n                    });\n                    fragmentInfoController.initialize();\n                    fragmentInfoControllers.push(fragmentInfoController);\n                }\n                fragmentInfoController.start();\n            }\n        });\n    }\n\n    function stopFragmentInfoControllers() {\n        fragmentInfoControllers.forEach(c => {\n            c.reset();\n        });\n        fragmentInfoControllers = [];\n    }\n\n    function onInitFragmentNeeded(e) {\n        let streamProcessor = getStreamProcessor(e.mediaType);\n        if (!streamProcessor) return;\n\n        // Create init segment request\n        let representationController = streamProcessor.getRepresentationController();\n        let representation = representationController.getCurrentRepresentation();\n        let mediaInfo = streamProcessor.getMediaInfo();\n\n        let request = new FragmentRequest();\n        request.mediaType = representation.adaptation.type;\n        request.type = initSegmentType;\n        request.range = representation.range;\n        request.quality = representation.index;\n        request.mediaInfo = mediaInfo;\n        request.representationId = representation.id;\n\n        const chunk = createDataChunk(request, mediaInfo.streamInfo.id, e.type !== events.FRAGMENT_LOADING_PROGRESS);\n\n        try {\n            // Generate init segment (moov)\n            chunk.bytes = mssFragmentProcessor.generateMoov(representation);\n\n            // Notify init segment has been loaded\n            eventBus.trigger(events.INIT_FRAGMENT_LOADED,\n                { chunk: chunk },\n                { streamId: mediaInfo.streamInfo.id, mediaType: representation.adaptation.type }\n            );\n        } catch (e) {\n            config.errHandler.error(new DashJSError(e.code, e.message, e.data));\n        }\n\n        // Change the sender value to stop event to be propagated\n        e.sender = null;\n    }\n\n    function onSegmentMediaLoaded(e) {\n        if (e.error)  return;\n\n        let streamProcessor = getStreamProcessor(e.request.mediaType);\n        if (!streamProcessor) return;\n\n        // Process moof to transcode it from MSS to DASH (or to update segment timeline for SegmentInfo fragments)\n        mssFragmentProcessor.processFragment(e, streamProcessor);\n\n        if (e.request.type === HTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE) {\n            // If FragmentInfo loaded, then notify corresponding MssFragmentInfoController\n            let fragmentInfoController = getFragmentInfoController(e.request.mediaType);\n            if (fragmentInfoController) {\n                fragmentInfoController.fragmentInfoLoaded(e);\n            }\n        }\n\n        // Start MssFragmentInfoControllers in case of start-over streams\n        let manifestInfo = e.request.mediaInfo.streamInfo.manifestInfo;\n        if (!manifestInfo.isDynamic && manifestInfo.dvrWindowSize !== Infinity) {\n            startFragmentInfoControllers();\n        }\n    }\n\n    function onPlaybackPaused() {\n        if (playbackController.getIsDynamic() && playbackController.getTime() !== 0) {\n            startFragmentInfoControllers();\n        }\n    }\n\n    function onPlaybackSeekAsked() {\n        if (playbackController.getIsDynamic() && playbackController.getTime() !== 0) {\n            startFragmentInfoControllers();\n        }\n    }\n\n    function onTTMLPreProcess(ttmlSubtitles) {\n        if (!ttmlSubtitles || !ttmlSubtitles.data) {\n            return;\n        }\n\n        ttmlSubtitles.data = ttmlSubtitles.data.replace(/http:\\/\\/www.w3.org\\/2006\\/10\\/ttaf1/gi, 'http://www.w3.org/ns/ttml');\n    }\n\n    function registerEvents() {\n        eventBus.on(events.INIT_FRAGMENT_NEEDED, onInitFragmentNeeded, instance, { priority: dashjs.FactoryMaker.getSingletonFactoryByName(eventBus.getClassName()).EVENT_PRIORITY_HIGH }); /* jshint ignore:line */\n        eventBus.on(events.PLAYBACK_PAUSED, onPlaybackPaused, instance, { priority: dashjs.FactoryMaker.getSingletonFactoryByName(eventBus.getClassName()).EVENT_PRIORITY_HIGH }); /* jshint ignore:line */\n        eventBus.on(events.PLAYBACK_SEEK_ASKED, onPlaybackSeekAsked, instance, { priority: dashjs.FactoryMaker.getSingletonFactoryByName(eventBus.getClassName()).EVENT_PRIORITY_HIGH }); /* jshint ignore:line */\n        eventBus.on(events.FRAGMENT_LOADING_COMPLETED, onSegmentMediaLoaded, instance, { priority: dashjs.FactoryMaker.getSingletonFactoryByName(eventBus.getClassName()).EVENT_PRIORITY_HIGH }); /* jshint ignore:line */\n        eventBus.on(events.TTML_TO_PARSE, onTTMLPreProcess, instance);\n    }\n\n    function reset() {\n        if (mssParser) {\n            mssParser.reset();\n            mssParser = undefined;\n        }\n\n        eventBus.off(events.INIT_FRAGMENT_NEEDED, onInitFragmentNeeded, this);\n        eventBus.off(events.PLAYBACK_PAUSED, onPlaybackPaused, this);\n        eventBus.off(events.PLAYBACK_SEEK_ASKED, onPlaybackSeekAsked, this);\n        eventBus.off(events.FRAGMENT_LOADING_COMPLETED, onSegmentMediaLoaded, this);\n        eventBus.off(events.TTML_TO_PARSE, onTTMLPreProcess, this);\n\n        // Reset FragmentInfoControllers\n        stopFragmentInfoControllers();\n    }\n\n    function createMssParser() {\n        mssParser = MssParser(context).create(config);\n        return mssParser;\n    }\n\n    instance = {\n        reset: reset,\n        createMssParser: createMssParser,\n        registerEvents: registerEvents\n    };\n\n    setup();\n\n    return instance;\n}\n\nMssHandler.__dashjs_factory_name = 'MssHandler';\nconst factory = dashjs.FactoryMaker.getClassFactory(MssHandler); /* jshint ignore:line */\nfactory.errors = MssErrors;\ndashjs.FactoryMaker.updateClassFactory(MssHandler.__dashjs_factory_name, factory); /* jshint ignore:line */\nexport default factory; /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport MssHandler from './MssHandler';\n\n// Shove both of these into the global scope\nvar context = (typeof window !== 'undefined' && window) || global;\n\nvar dashjs = context.dashjs;\nif (!dashjs) {\n    dashjs = context.dashjs = {};\n}\n\ndashjs.MssHandler = MssHandler;\n\nexport default dashjs;\nexport { MssHandler };\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n"],"sourceRoot":""}